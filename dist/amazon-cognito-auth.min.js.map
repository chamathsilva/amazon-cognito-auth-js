{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///amazon-cognito-auth.min.js","webpack:///webpack/bootstrap 3738391c807772c8492c","webpack:///./enhance.js","webpack:///./src/CognitoAccessToken.js","webpack:///./src/CognitoIdToken.js","webpack:///./src/CognitoRefreshToken.js","webpack:///./src/CognitoTokenScopes.js","webpack:///./src/CognitoAuthSession.js","webpack:///./src/StorageHelper.js","webpack:///./src/CognitoAuth.js","webpack:///./src/CookieStorage.js","webpack:///./src/DateHelper.js","webpack:///./src/index.js","webpack:///./~/js-cookie/src/js.cookie.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","default","defineProperty","value","_src","keys","forEach","enumerable","get","window","crypto","msCrypto","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","configurable","writable","protoProps","staticProps","CognitoAccessToken","AccessToken","jwtToken","payload","decodePayload","accessToken","jwtPayload","split","JSON","parse","atob","exp","username","err","CognitoIdToken","IdToken","idToken","CognitoRefreshToken","RefreshToken","refreshToken","CognitoTokenScopes","TokenScopesArray","tokenScopes","_interopRequireDefault","_CognitoTokenScopes","_CognitoTokenScopes2","_CognitoAccessToken","_CognitoAccessToken2","_CognitoIdToken","_CognitoIdToken2","_CognitoRefreshToken","_CognitoRefreshToken2","CognitoAuthSession","_ref","arguments","undefined","TokenScopes","State","state","now","Math","floor","Date","getExpiration","e","dataMemory","MemoryStorage","StorageHelper","storageWindow","localStorage","setItem","removeItem","exception","_asyncToGenerator","fn","gen","apply","Promise","resolve","reject","step","arg","info","error","done","then","_typeof","Symbol","iterator","constructor","_CognitoAuthSession","_CognitoAuthSession2","_StorageHelper","_StorageHelper2","CognitoAuth","data","ClientId","AppWebDomain","RedirectUriSignIn","RedirectUriSignOut","IdentityProvider","UserPoolId","AdvancedSecurityDataCollectionFlag","Storage","Error","getCognitoConstants","PARAMETERERROR","clientId","appWebDomain","Array","isArray","SCOPETYPEERROR","responseType","TOKEN","storage","getStorage","getLastUser","userPoolId","signInUserSession","getCachedSession","setTokenScopes","advancedSecurityDataCollectionFlag","CognitoConstants","DOMAIN_SCHEME","DOMAIN_PATH_SIGNIN","DOMAIN_PATH_TOKEN","DOMAIN_PATH_SIGNOUT","DOMAIN_QUERY_PARAM_REDIRECT_URI","DOMAIN_QUERY_PARAM_SIGNOUT_URI","DOMAIN_QUERY_PARAM_RESPONSE_TYPE","DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER","DOMAIN_QUERY_PARAM_USERCONTEXTDATA","CLIENT_ID","STATE","SCOPE","CODE","POST","QUESTIONMARK","POUNDSIGN","COLONDOUBLESLASH","SLASH","AMPERSAND","EQUALSIGN","SPACE","CONTENTTYPE","CONTENTTYPEVALUE","AUTHORIZATIONCODE","IDTOKEN","ACCESSTOKEN","REFRESHTOKEN","ERROR","ERROR_DESCRIPTION","STRINGTYPE","STATELENGTH","STATEORIGINSTRING","WITHCREDENTIALS","UNDEFINED","SELF","HOSTNAMEREGEX","QUERYPARAMETERREGEX1","QUERYPARAMETERREGEX2","HEADER","Content-Type","lastUserKey","lastAuthUser","getItem","Username","getSession","_ref2","regeneratorRuntime","mark","_callee","tokenScopesInputSet","cachedScopesSet","URL","wrap","_context","prev","next","Set","getScopes","getFQDNSignIn","isValid","abrupt","compareSets","setIdToken","setAccessToken","setRefreshToken","launchUri","getRefreshToken","getToken","refreshSession","stop","parseCognitoWebResponse","_x","_ref3","_callee2","httpRequestResponse","map","response","_response","_response2","_context2","indexOf","getQueryParameters","getCodeQueryParameter","sent","has","userhandler","onFailure","getTokenQueryParameter","_x2","_ref4","_callee3","codeParameter","url","header","body","_context3","setState","concat","getAppWebDomain","grant_type","client_id","getClientId","redirect_uri","code","makePOSTRequest","onSuccessExchangeForToken","_x3","_ref5","_callee4","_context4","setJwtToken","cacheTokensScopes","keyPrefix","idTokenKey","accessTokenKey","refreshTokenKey","scopeKey","scopesString","scopesArray","sessionData","cachedSession","lastUserName","tokenUserName","getAccessToken","getUsername","getTokenScopes","join","getIdToken","getJwtToken","set1","set2","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","item","return","match","splitMark","str","String","url2","str1","num","Map","set","chars","result","round","random","_x4","_ref6","_callee5","_context5","refresh_token","onSuccessRefreshToken","_this","xhr","createCORSRequest","bodyString","setRequestHeader","substring","send","onreadystatechange","readyState","status","responseText","method","XMLHttpRequest","open","XDomainRequest","_x7","_ref7","_callee6","jsonData","jsonDataObject","_context6","id_token","access_token","_x8","_ref8","_callee7","_context7","tokenScopesString","encodeURIComponent","generateRandomString","identityProviderParam","getSpaceSeperatedScopeString","userContextDataParam","userContextData","getUserContextData","uri","getFQDNSignOut","clearCachedTokensScopes","AmazonCognitoAdvancedSecurityData","_username","_userpoolId","userpoolId","getData","_jsCookie","Cookies","CookieStorage","domain","path","expires","secure","remove","cookies","index","monthNames","weekNames","DateHelper","weekDay","getUTCDay","month","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","year","getUTCFullYear","dateNow","_CognitoAuth","_DateHelper","_CookieStorage","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","registeredInModuleLoader","OldCookies","api","noConflict","extend","attributes","init","converter","document","defaults","setMilliseconds","getMilliseconds","toUTCString","stringify","test","write","replace","decodeURIComponent","escape","stringifiedAttributes","attributeName","cookie","rdecode","parts","slice","json","charAt","name","read","getJSON","withConverter"],"mappings":"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","file":"amazon-cognito-auth.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory();\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * Copyright 2017 Amazon.com,\n * Inc. or its affiliates. All Rights Reserved.\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the\n * License. A copy of the License is located at\n * \n *      http://aws.amazon.com/apache2.0/\n * \n * or in the \"license\" file accompanying this file. This file is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, express or implied. See the License\n * for the specific language governing permissions and\n * limitations under the License. \n */\n\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AmazonCognitoIdentity\"] = factory();\n\telse\n\t\troot[\"AmazonCognitoIdentity\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _src = __webpack_require__(10);\n\t\n\tObject.keys(_src).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _src[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar enhancements = _interopRequireWildcard(_src);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t// The version of crypto-browserify included by aws-sdk only\n\t// checks for window.crypto, not window.msCrypto as used by\n\t// IE 11 – so we set it explicitly here\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\tif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n\t  window.crypto = window.msCrypto;\n\t}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoAccessToken = function () {\n\t  /**\n\t   * Constructs a new CognitoAccessToken object\n\t   * @param {string=} AccessToken The JWT access token.\n\t   */\n\t  function CognitoAccessToken(AccessToken) {\n\t    _classCallCheck(this, CognitoAccessToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = AccessToken || '';\n\t    this.payload = this.decodePayload();\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoAccessToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for access token.\n\t     * @param {string=} accessToken The JWT access token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setJwtToken',\n\t    value: function setJwtToken(accessToken) {\n\t      this.jwtToken = accessToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      if (this.jwtToken === null) {\n\t        return undefined;\n\t      }\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      return JSON.parse(atob(jwtPayload)).exp;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the username from payload.\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      if (this.jwtToken === null) {\n\t        return undefined;\n\t      }\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      return JSON.parse(atob(jwtPayload)).username;\n\t    }\n\t\n\t    /**\n\t     * @returns {object} the token's payload.\n\t     */\n\t\n\t  }, {\n\t    key: 'decodePayload',\n\t    value: function decodePayload() {\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      try {\n\t        return JSON.parse(atob(jwtPayload));\n\t      } catch (err) {\n\t        return {};\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoAccessToken;\n\t}();\n\t\n\texports.default = CognitoAccessToken;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoIdToken = function () {\n\t  /**\n\t   * Constructs a new CognitoIdToken object\n\t   * @param {string=} IdToken The JWT Id token\n\t   */\n\t  function CognitoIdToken(IdToken) {\n\t    _classCallCheck(this, CognitoIdToken);\n\t\n\t    // Assign object\n\t    this.jwtToken = IdToken || '';\n\t    this.payload = this.decodePayload();\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoIdToken, [{\n\t    key: 'getJwtToken',\n\t    value: function getJwtToken() {\n\t      return this.jwtToken;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for id token.\n\t     * @param {string=} idToken The JWT Id token\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setJwtToken',\n\t    value: function setJwtToken(idToken) {\n\t      this.jwtToken = idToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {int} the token's expiration (exp member).\n\t     */\n\t\n\t  }, {\n\t    key: 'getExpiration',\n\t    value: function getExpiration() {\n\t      if (this.jwtToken === null) {\n\t        return undefined;\n\t      }\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      return JSON.parse(atob(jwtPayload)).exp;\n\t    }\n\t\n\t    /**\n\t     * @returns {object} the token's payload.\n\t     */\n\t\n\t  }, {\n\t    key: 'decodePayload',\n\t    value: function decodePayload() {\n\t      var jwtPayload = this.jwtToken.split('.')[1];\n\t      try {\n\t        return JSON.parse(atob(jwtPayload));\n\t      } catch (err) {\n\t        return {};\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoIdToken;\n\t}();\n\t\n\texports.default = CognitoIdToken;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoRefreshToken = function () {\n\t  /**\n\t   * Constructs a new CognitoRefreshToken object\n\t   * @param {string=} RefreshToken The JWT refresh token.\n\t   */\n\t  function CognitoRefreshToken(RefreshToken) {\n\t    _classCallCheck(this, CognitoRefreshToken);\n\t\n\t    // Assign object\n\t    this.refreshToken = RefreshToken || '';\n\t  }\n\t\n\t  /**\n\t   * @returns {string} the record's token.\n\t   */\n\t\n\t\n\t  _createClass(CognitoRefreshToken, [{\n\t    key: 'getToken',\n\t    value: function getToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for refresh token.\n\t     * @param {string=} refreshToken The JWT refresh token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setToken',\n\t    value: function setToken(refreshToken) {\n\t      this.refreshToken = refreshToken;\n\t    }\n\t  }]);\n\t\n\t  return CognitoRefreshToken;\n\t}();\n\t\n\texports.default = CognitoRefreshToken;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\t\n\t/** @class */\n\tvar CognitoTokenScopes = function () {\n\t  /**\n\t   * Constructs a new CognitoTokenScopes object\n\t   * @param {array=} TokenScopesArray The token scopes\n\t   */\n\t  function CognitoTokenScopes(TokenScopesArray) {\n\t    _classCallCheck(this, CognitoTokenScopes);\n\t\n\t    // Assign object\n\t    this.tokenScopes = TokenScopesArray || [];\n\t  }\n\t\n\t  /**\n\t   * @returns {Array} the token scopes.\n\t   */\n\t\n\t\n\t  _createClass(CognitoTokenScopes, [{\n\t    key: \"getScopes\",\n\t    value: function getScopes() {\n\t      return this.tokenScopes;\n\t    }\n\t\n\t    /**\n\t     * Sets new value for token scopes.\n\t     * @param {array=} tokenScopes The token scopes\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: \"setTokenScopes\",\n\t    value: function setTokenScopes(tokenScopes) {\n\t      this.tokenScopes = tokenScopes;\n\t    }\n\t  }]);\n\t\n\t  return CognitoTokenScopes;\n\t}();\n\t\n\texports.default = CognitoTokenScopes;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\tmazon Cognito Auth SDK for JavaScript\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Apache License, Version 2.0 (the \"License\").\n\tou may not use this file except in compliance with the License.\n\tcopy of the License is located at\n\tn\thttp://aws.amazon.com/apache2.0/\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * or in the \"license\" file accompanying this file.\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\teither express or implied. See the\n\ticense for the specific language governing permissions\n\tand limitations under the License.\n\tn\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tvar _CognitoTokenScopes2 = _interopRequireDefault(_CognitoTokenScopes);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAuthSession = function () {\n\t  /**\n\t   * Constructs a new CognitoUserSession object\n\t   * @param {CognitoIdToken} IdToken The session's Id token.\n\t   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n\t   * @param {CognitoAccessToken} AccessToken The session's access token.\n\t   * @param {array}  TokenScopes  The session's token scopes.\n\t    * @param {string} State The session's state. \n\t   */\n\t  function CognitoAuthSession() {\n\t    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t        IdToken = _ref.IdToken,\n\t        RefreshToken = _ref.RefreshToken,\n\t        AccessToken = _ref.AccessToken,\n\t        TokenScopes = _ref.TokenScopes,\n\t        State = _ref.State;\n\t\n\t    _classCallCheck(this, CognitoAuthSession);\n\t\n\t    if (IdToken) {\n\t      this.idToken = IdToken;\n\t    } else {\n\t      this.idToken = new _CognitoIdToken2.default();\n\t    }\n\t    if (RefreshToken) {\n\t      this.refreshToken = RefreshToken;\n\t    } else {\n\t      this.refreshToken = new _CognitoRefreshToken2.default();\n\t    }\n\t    if (AccessToken) {\n\t      this.accessToken = AccessToken;\n\t    } else {\n\t      this.accessToken = new _CognitoAccessToken2.default();\n\t    }\n\t    if (TokenScopes) {\n\t      this.tokenScopes = TokenScopes;\n\t    } else {\n\t      this.tokenScopes = new _CognitoTokenScopes2.default();\n\t    }\n\t    if (State) {\n\t      this.state = State;\n\t    } else {\n\t      this.state = null;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @returns {CognitoIdToken} the session's Id token\n\t   */\n\t\n\t\n\t  _createClass(CognitoAuthSession, [{\n\t    key: 'getIdToken',\n\t    value: function getIdToken() {\n\t      return this.idToken;\n\t    }\n\t\n\t    /**\n\t     * Set a new Id token\n\t     * @param {CognitoIdToken} IdToken The session's Id token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setIdToken',\n\t    value: function setIdToken(IdToken) {\n\t      this.idToken = IdToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoRefreshToken} the session's refresh token\n\t     */\n\t\n\t  }, {\n\t    key: 'getRefreshToken',\n\t    value: function getRefreshToken() {\n\t      return this.refreshToken;\n\t    }\n\t\n\t    /**\n\t     * Set a new Refresh token\n\t     * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setRefreshToken',\n\t    value: function setRefreshToken(RefreshToken) {\n\t      this.refreshToken = RefreshToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoAccessToken} the session's access token\n\t     */\n\t\n\t  }, {\n\t    key: 'getAccessToken',\n\t    value: function getAccessToken() {\n\t      return this.accessToken;\n\t    }\n\t\n\t    /**\n\t     * Set a new Access token\n\t     * @param {CognitoAccessToken} AccessToken The session's access token.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setAccessToken',\n\t    value: function setAccessToken(AccessToken) {\n\t      this.accessToken = AccessToken;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoTokenScopes} the session's token scopes\n\t     */\n\t\n\t  }, {\n\t    key: 'getTokenScopes',\n\t    value: function getTokenScopes() {\n\t      return this.tokenScopes;\n\t    }\n\t\n\t    /**\n\t     * Set new token scopes\n\t     * @param {array}  tokenScopes  The session's token scopes.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setTokenScopes',\n\t    value: function setTokenScopes(tokenScopes) {\n\t      this.tokenScopes = tokenScopes;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the session's state\n\t     */\n\t\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t\n\t    /**\n\t     * Set new state\n\t     * @param {string}  state  The session's state.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setState',\n\t    value: function setState(State) {\n\t      this.state = State;\n\t    }\n\t\n\t    /**\n\t     * Checks to see if the session is still valid based on session expiry information found\n\t     * in Access and Id Tokens and the current time\n\t     * @returns {boolean} if the session is still valid\n\t     */\n\t\n\t  }, {\n\t    key: 'isValid',\n\t    value: function isValid() {\n\t      var now = Math.floor(new Date() / 1000);\n\t      try {\n\t        if (this.accessToken != null) {\n\t          return now < this.accessToken.getExpiration();\n\t        }\n\t        if (this.idToken != null) {\n\t          return now < this.idToken.getExpiration();\n\t        }\n\t        return false;\n\t      } catch (e) {\n\t        return false;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return CognitoAuthSession;\n\t}();\n\t\n\texports.default = CognitoAuthSession;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\tvar dataMemory = {};\n\t\n\t/** @class */\n\t\n\tvar MemoryStorage = function () {\n\t  function MemoryStorage() {\n\t    _classCallCheck(this, MemoryStorage);\n\t  }\n\t\n\t  _createClass(MemoryStorage, null, [{\n\t    key: 'setItem',\n\t\n\t\n\t    /**\n\t     * This is used to set a specific item in storage\n\t     * @param {string} key - the key for the item\n\t     * @param {object} value - the value\n\t     * @returns {string} value that was set\n\t     */\n\t    value: function setItem(key, value) {\n\t      dataMemory[key] = value;\n\t      return dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to get a specific key from storage\n\t     * @param {string} key - the key for the item\n\t     * This is used to clear the storage\n\t     * @returns {string} the data item\n\t     */\n\t\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to remove an item from storage\n\t     * @param {string} key - the key being set\n\t     * @returns {string} value - value that was deleted\n\t     */\n\t\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      return delete dataMemory[key];\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the storage\n\t     * @returns {string} nothing\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      dataMemory = {};\n\t      return dataMemory;\n\t    }\n\t  }]);\n\t\n\t  return MemoryStorage;\n\t}();\n\t\n\t/** @class */\n\t\n\t\n\tvar StorageHelper = function () {\n\t\n\t  /**\n\t   * This is used to get a storage object\n\t   * @returns {object} the storage\n\t   */\n\t  function StorageHelper() {\n\t    _classCallCheck(this, StorageHelper);\n\t\n\t    try {\n\t      this.storageWindow = window.localStorage;\n\t      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n\t      this.storageWindow.removeItem('aws.cognito.test-ls');\n\t    } catch (exception) {\n\t      this.storageWindow = MemoryStorage;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * This is used to return the storage\n\t   * @returns {object} the storage\n\t   */\n\t\n\t\n\t  _createClass(StorageHelper, [{\n\t    key: 'getStorage',\n\t    value: function getStorage() {\n\t      return this.storageWindow;\n\t    }\n\t  }]);\n\t\n\t  return StorageHelper;\n\t}();\n\t\n\texports.default = StorageHelper;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*!\n\tmazon Cognito Auth SDK for JavaScript\n\topyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\tn\ticensed under the Apache License, Version 2.0 (the \"License\").\n\tou may not use this file except in compliance with the License.\n\tcopy of the License is located at\n\tn\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       *         http://aws.amazon.com/apache2.0/\n\tn\tor in the \"license\" file accompanying this file.\n\this file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\ticense for the specific language governing permissions\n\tand limitations under the License.\n\tn\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tvar _CognitoTokenScopes2 = _interopRequireDefault(_CognitoTokenScopes);\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tvar _CognitoAccessToken2 = _interopRequireDefault(_CognitoAccessToken);\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tvar _CognitoIdToken2 = _interopRequireDefault(_CognitoIdToken);\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tvar _CognitoRefreshToken2 = _interopRequireDefault(_CognitoRefreshToken);\n\t\n\tvar _CognitoAuthSession = __webpack_require__(5);\n\t\n\tvar _CognitoAuthSession2 = _interopRequireDefault(_CognitoAuthSession);\n\t\n\tvar _StorageHelper = __webpack_require__(6);\n\t\n\tvar _StorageHelper2 = _interopRequireDefault(_StorageHelper);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CognitoAuth = function () {\n\t  /**\n\t   * Constructs a new CognitoAuth object\n\t   * @param {object} data Creation options\n\t   * @param {string} data.ClientId Required: User pool application client id.\n\t   * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\n\t   *                     this is set at the Cognito console.\n\t   * @param {array} data.TokenScopesArray Optional: The token scopes\n\t   * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\n\t   * which will be launched after authentication as signed in.\n\t   * @param {string} data.RedirectUriSignOut Required:\n\t   * The redirect Uri, which will be launched when signed out.\n\t   * @param {string} data.IdentityProvider Optional: Pre-selected identity provider (this allows to\n\t   * automatically trigger social provider authentication flow).\n\t   * @param {string} data.UserPoolId Optional: UserPoolId for the configured cognito userPool.\n\t   * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional: boolean flag indicating if the\n\t   *        data collection is enabled to support cognito advanced security features. By default, this\n\t   *        flag is set to true.\n\t   * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\n\t   */\n\t  function CognitoAuth(data) {\n\t    _classCallCheck(this, CognitoAuth);\n\t\n\t    var _ref = data || {},\n\t        ClientId = _ref.ClientId,\n\t        AppWebDomain = _ref.AppWebDomain,\n\t        TokenScopesArray = _ref.TokenScopesArray,\n\t        RedirectUriSignIn = _ref.RedirectUriSignIn,\n\t        RedirectUriSignOut = _ref.RedirectUriSignOut,\n\t        IdentityProvider = _ref.IdentityProvider,\n\t        UserPoolId = _ref.UserPoolId,\n\t        AdvancedSecurityDataCollectionFlag = _ref.AdvancedSecurityDataCollectionFlag,\n\t        Storage = _ref.Storage;\n\t\n\t    if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\n\t      throw new Error(this.getCognitoConstants().PARAMETERERROR);\n\t    }\n\t\n\t    this.clientId = ClientId;\n\t    this.appWebDomain = AppWebDomain;\n\t    this.TokenScopesArray = TokenScopesArray || [];\n\t    if (!Array.isArray(TokenScopesArray)) {\n\t      throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\n\t    }\n\t    var tokenScopes = new _CognitoTokenScopes2.default(this.TokenScopesArray);\n\t    this.RedirectUriSignIn = RedirectUriSignIn;\n\t    this.RedirectUriSignOut = RedirectUriSignOut;\n\t    this.IdentityProvider = IdentityProvider;\n\t    this.responseType = this.getCognitoConstants().TOKEN;\n\t    this.storage = Storage || new _StorageHelper2.default().getStorage();\n\t    this.username = this.getLastUser();\n\t    this.userPoolId = UserPoolId;\n\t    this.signInUserSession = this.getCachedSession();\n\t    +this.signInUserSession.setTokenScopes(tokenScopes);\n\t\n\t    /**\n\t     * By default, AdvancedSecurityDataCollectionFlag is set to true, if no input value is provided.\n\t     */\n\t    this.advancedSecurityDataCollectionFlag = true;\n\t    if (AdvancedSecurityDataCollectionFlag) {\n\t      this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * @returns {JSON} the constants\n\t   */\n\t\n\t\n\t  _createClass(CognitoAuth, [{\n\t    key: 'getCognitoConstants',\n\t    value: function getCognitoConstants() {\n\t      var CognitoConstants = {\n\t        DOMAIN_SCHEME: 'https',\n\t        DOMAIN_PATH_SIGNIN: 'oauth2/authorize',\n\t        DOMAIN_PATH_TOKEN: 'oauth2/token',\n\t        DOMAIN_PATH_SIGNOUT: 'logout',\n\t        DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\n\t        DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\n\t        DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\n\t        DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER: 'identity_provider',\n\t        DOMAIN_QUERY_PARAM_USERCONTEXTDATA: 'userContextData',\n\t        CLIENT_ID: 'client_id',\n\t        STATE: 'state',\n\t        SCOPE: 'scope',\n\t        TOKEN: 'token',\n\t        CODE: 'code',\n\t        POST: 'POST',\n\t        PARAMETERERROR: 'The parameters: App client Id, App web domain' + ', the redirect URL when you are signed in and the ' + 'redirect URL when you are signed out are required.',\n\t        SCOPETYPEERROR: 'Scopes have to be array type. ',\n\t        QUESTIONMARK: '?',\n\t        POUNDSIGN: '#',\n\t        COLONDOUBLESLASH: '://',\n\t        SLASH: '/',\n\t        AMPERSAND: '&',\n\t        EQUALSIGN: '=',\n\t        SPACE: ' ',\n\t        CONTENTTYPE: 'Content-Type',\n\t        CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\n\t        AUTHORIZATIONCODE: 'authorization_code',\n\t        IDTOKEN: 'id_token',\n\t        ACCESSTOKEN: 'access_token',\n\t        REFRESHTOKEN: 'refresh_token',\n\t        ERROR: 'error',\n\t        ERROR_DESCRIPTION: 'error_description',\n\t        STRINGTYPE: 'string',\n\t        STATELENGTH: 32,\n\t        STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n\t        WITHCREDENTIALS: 'withCredentials',\n\t        UNDEFINED: 'undefined',\n\t        SELF: '_self',\n\t        HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\n\t        QUERYPARAMETERREGEX1: /#(.+)/,\n\t        QUERYPARAMETERREGEX2: /=(.+)/,\n\t        HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' }\n\t      };\n\t      return CognitoConstants;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the client id\n\t     */\n\t\n\t  }, {\n\t    key: 'getClientId',\n\t    value: function getClientId() {\n\t      return this.clientId;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the app web domain\n\t     */\n\t\n\t  }, {\n\t    key: 'getAppWebDomain',\n\t    value: function getAppWebDomain() {\n\t      return this.appWebDomain;\n\t    }\n\t\n\t    /**\n\t     * method for getting the current user of the application from the local storage\n\t     *\n\t     * @returns {CognitoAuth} the user retrieved from storage\n\t     */\n\t\n\t  }, {\n\t    key: 'getCurrentUser',\n\t    value: function getCurrentUser() {\n\t      var lastUserKey = 'CognitoIdentityServiceProvider.' + this.clientId + '.LastAuthUser';\n\t\n\t      var lastAuthUser = this.storage.getItem(lastUserKey);\n\t      return lastAuthUser;\n\t    }\n\t\n\t    /**\n\t     * @param {string} Username the user's name\n\t     * method for setting the current user's name\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setUser',\n\t    value: function setUser(Username) {\n\t      this.username = Username;\n\t    }\n\t\n\t    /**\n\t     * sets response type to 'code'\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'useCodeGrantFlow',\n\t    value: function useCodeGrantFlow() {\n\t      this.responseType = this.getCognitoConstants().CODE;\n\t    }\n\t\n\t    /**\n\t     * sets response type to 'token'\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'useImplicitFlow',\n\t    value: function useImplicitFlow() {\n\t      this.responseType = this.getCognitoConstants().TOKEN;\n\t    }\n\t\n\t    /**\n\t     * @returns {CognitoAuthSession} the current session for this user\n\t     */\n\t\n\t  }, {\n\t    key: 'getSignInUserSession',\n\t    value: function getSignInUserSession() {\n\t      return this.signInUserSession;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the user's username\n\t     */\n\t\n\t  }, {\n\t    key: 'getUsername',\n\t    value: function getUsername() {\n\t      return this.username;\n\t    }\n\t\n\t    /**\n\t     * @param {string} Username the user's username\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setUsername',\n\t    value: function setUsername(Username) {\n\t      this.username = Username;\n\t    }\n\t\n\t    /**\n\t     * @returns {string} the user's state\n\t     */\n\t\n\t  }, {\n\t    key: 'getState',\n\t    value: function getState() {\n\t      return this.state;\n\t    }\n\t\n\t    /**\n\t     * @param {string} State the user's state\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'setState',\n\t    value: function setState(State) {\n\t      this.state = State;\n\t    }\n\t\n\t    /**\n\t     * This is used to get a session, either from the session object\n\t     * or from the local storage, or by using a refresh token\n\t     * @param {string} RedirectUriSignIn Required: The redirect Uri,\n\t     * which will be launched after authentication.\n\t     * @param {array} TokenScopesArray Required: The token scopes, it is an\n\t     * array of strings specifying all scopes for the tokens.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getSession',\n\t    value: function () {\n\t      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n\t        var tokenScopesInputSet, cachedScopesSet, URL, tokenScopes, idToken, accessToken, refreshToken;\n\t        return regeneratorRuntime.wrap(function _callee$(_context) {\n\t          while (1) {\n\t            switch (_context.prev = _context.next) {\n\t              case 0:\n\t                tokenScopesInputSet = new Set(this.TokenScopesArray);\n\t                cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\n\t                URL = this.getFQDNSignIn();\n\t\n\t                if (!(this.signInUserSession != null && this.signInUserSession.isValid())) {\n\t                  _context.next = 5;\n\t                  break;\n\t                }\n\t\n\t                return _context.abrupt('return', this.signInUserSession);\n\t\n\t              case 5:\n\t                this.signInUserSession = this.getCachedSession();\n\t                // compare scopes\n\t\n\t                if (this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\n\t                  _context.next = 18;\n\t                  break;\n\t                }\n\t\n\t                tokenScopes = new _CognitoTokenScopes2.default(this.TokenScopesArray);\n\t                idToken = new _CognitoIdToken2.default();\n\t                accessToken = new _CognitoAccessToken2.default();\n\t                refreshToken = new _CognitoRefreshToken2.default();\n\t\n\t                this.signInUserSession.setTokenScopes(tokenScopes);\n\t                this.signInUserSession.setIdToken(idToken);\n\t                this.signInUserSession.setAccessToken(accessToken);\n\t                this.signInUserSession.setRefreshToken(refreshToken);\n\t                this.launchUri(URL);\n\t                _context.next = 29;\n\t                break;\n\t\n\t              case 18:\n\t                if (!this.signInUserSession.isValid()) {\n\t                  _context.next = 22;\n\t                  break;\n\t                }\n\t\n\t                return _context.abrupt('return', this.signInUserSession);\n\t\n\t              case 22:\n\t                if (!(!this.signInUserSession.getRefreshToken() || !this.signInUserSession.getRefreshToken().getToken())) {\n\t                  _context.next = 26;\n\t                  break;\n\t                }\n\t\n\t                this.launchUri(URL);\n\t                _context.next = 29;\n\t                break;\n\t\n\t              case 26:\n\t                _context.next = 28;\n\t                return this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\n\t\n\t              case 28:\n\t                return _context.abrupt('return', this.signInUserSession);\n\t\n\t              case 29:\n\t                throw undefined;\n\t\n\t              case 30:\n\t              case 'end':\n\t                return _context.stop();\n\t            }\n\t          }\n\t        }, _callee, this);\n\t      }));\n\t\n\t      function getSession() {\n\t        return _ref2.apply(this, arguments);\n\t      }\n\t\n\t      return getSession;\n\t    }()\n\t\n\t    /**\n\t     * This is used to start a new session\n\t     * @param {string} RedirectUriSignIn Required: The redirect Uri,\n\t     * which will be launched after authentication.\n\t     * @param {array} TokenScopesArray Required: The token scopes, it is an\n\t     * array of strings specifying all scopes for the tokens.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'startSession',\n\t    value: function startSession() {\n\t      var URL = this.getFQDNSignIn();\n\t      var tokenScopes = new _CognitoTokenScopes2.default(this.TokenScopesArray);\n\t      var idToken = new _CognitoIdToken2.default();\n\t      var accessToken = new _CognitoAccessToken2.default();\n\t      var refreshToken = new _CognitoRefreshToken2.default();\n\t      this.signInUserSession.setTokenScopes(tokenScopes);\n\t      this.signInUserSession.setIdToken(idToken);\n\t      this.signInUserSession.setAccessToken(accessToken);\n\t      this.signInUserSession.setRefreshToken(refreshToken);\n\t      this.launchUri(URL);\n\t    }\n\t\n\t    /**\n\t     * @param {string} httpRequestResponse the http request response\n\t     * @returns {void}\n\t     * Parse the http request response and proceed according to different response types.\n\t     */\n\t\n\t  }, {\n\t    key: 'parseCognitoWebResponse',\n\t    value: function () {\n\t      var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(httpRequestResponse) {\n\t        var map, response, _response, _response2;\n\t\n\t        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n\t          while (1) {\n\t            switch (_context2.prev = _context2.next) {\n\t              case 0:\n\t                map = void 0;\n\t\n\t                if (!(httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1)) {\n\t                  _context2.next = 10;\n\t                  break;\n\t                }\n\t\n\t                // for code type\n\t                // this is to avoid a bug exists when sign in with Google or facebook\n\t                // Sometimes the code will contain a poundsign in the end which breaks the parsing\n\t                response = httpRequestResponse.split(this.getCognitoConstants().POUNDSIGN)[0];\n\t\n\t                map = this.getQueryParameters(response, this.getCognitoConstants().QUESTIONMARK);\n\t                // this.getCodeQueryParameter(map);\n\t                _context2.next = 6;\n\t                return this.getCodeQueryParameter(map);\n\t\n\t              case 6:\n\t                _response = _context2.sent;\n\t                return _context2.abrupt('return', _response);\n\t\n\t              case 10:\n\t                if (!(httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1)) {\n\t                  _context2.next = 18;\n\t                  break;\n\t                }\n\t\n\t                // for token type\n\t                map = this.getQueryParameters(httpRequestResponse, this.getCognitoConstants().QUERYPARAMETERREGEX1);\n\t\n\t                if (!map.has(this.getCognitoConstants().ERROR)) {\n\t                  _context2.next = 14;\n\t                  break;\n\t                }\n\t\n\t                return _context2.abrupt('return', this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION)));\n\t\n\t              case 14:\n\t                _context2.next = 16;\n\t                return this.getTokenQueryParameter(map);\n\t\n\t              case 16:\n\t                _response2 = _context2.sent;\n\t                return _context2.abrupt('return', _response2);\n\t\n\t              case 18:\n\t              case 'end':\n\t                return _context2.stop();\n\t            }\n\t          }\n\t        }, _callee2, this);\n\t      }));\n\t\n\t      function parseCognitoWebResponse(_x) {\n\t        return _ref3.apply(this, arguments);\n\t      }\n\t\n\t      return parseCognitoWebResponse;\n\t    }()\n\t\n\t    // done -2\n\t    /**\n\t     * @param {map} Query parameter map \n\t     * @returns {void}\n\t     * Get the query parameter map and proceed according to code response type.\n\t     */\n\t\n\t  }, {\n\t    key: 'getCodeQueryParameter',\n\t    value: function () {\n\t      var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(map) {\n\t        var state, codeParameter, url, header, body, _response;\n\t\n\t        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n\t          while (1) {\n\t            switch (_context3.prev = _context3.next) {\n\t              case 0:\n\t                state = null;\n\t\n\t                if (map.has(this.getCognitoConstants().STATE)) {\n\t                  this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n\t                } else {\n\t                  this.signInUserSession.setState(state);\n\t                }\n\t\n\t                if (!map.has(this.getCognitoConstants().CODE)) {\n\t                  _context3.next = 13;\n\t                  break;\n\t                }\n\t\n\t                // if the response contains code\n\t                // To parse the response and get the code value.\n\t                codeParameter = map.get(this.getCognitoConstants().CODE);\n\t                url = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n\t                header = this.getCognitoConstants().HEADER;\n\t                body = { grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\n\t                  client_id: this.getClientId(),\n\t                  redirect_uri: this.RedirectUriSignIn,\n\t                  code: codeParameter };\n\t                // const boundOnSuccess = (this.onSuccessExchangeForToken).bind(this);\n\t                // const boundOnFailure = (this.onFailure).bind(this);\n\t                // this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n\t\n\t                _context3.next = 9;\n\t                return this.makePOSTRequest(header, body, url);\n\t\n\t              case 9:\n\t                _response = _context3.sent;\n\t                _context3.next = 12;\n\t                return this.onSuccessExchangeForToken(_response);\n\t\n\t              case 12:\n\t                return _context3.abrupt('return', this.signInUserSession);\n\t\n\t              case 13:\n\t                return _context3.abrupt('return', null);\n\t\n\t              case 14:\n\t              case 'end':\n\t                return _context3.stop();\n\t            }\n\t          }\n\t        }, _callee3, this);\n\t      }));\n\t\n\t      function getCodeQueryParameter(_x2) {\n\t        return _ref4.apply(this, arguments);\n\t      }\n\t\n\t      return getCodeQueryParameter;\n\t    }()\n\t\n\t    // done -2\n\t    /**\n\t     * Get the query parameter map and proceed according to token response type.\n\t     * @param {map} Query parameter map \n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'getTokenQueryParameter',\n\t    value: function () {\n\t      var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(map) {\n\t        var idToken, accessToken, refreshToken, state;\n\t        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n\t          while (1) {\n\t            switch (_context4.prev = _context4.next) {\n\t              case 0:\n\t                idToken = new _CognitoIdToken2.default();\n\t                accessToken = new _CognitoAccessToken2.default();\n\t                refreshToken = new _CognitoRefreshToken2.default();\n\t                state = null;\n\t\n\t                if (map.has(this.getCognitoConstants().IDTOKEN)) {\n\t                  idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\n\t                  this.signInUserSession.setIdToken(idToken);\n\t                } else {\n\t                  this.signInUserSession.setIdToken(idToken);\n\t                }\n\t                if (map.has(this.getCognitoConstants().ACCESSTOKEN)) {\n\t                  accessToken.setJwtToken(map.get(this.getCognitoConstants().ACCESSTOKEN));\n\t                  this.signInUserSession.setAccessToken(accessToken);\n\t                } else {\n\t                  this.signInUserSession.setAccessToken(accessToken);\n\t                }\n\t                if (map.has(this.getCognitoConstants().STATE)) {\n\t                  this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n\t                } else {\n\t                  this.signInUserSession.setState(state);\n\t                }\n\t                this.cacheTokensScopes();\n\t                // this.userhandler.onSuccess(this.signInUserSession); \n\t                return _context4.abrupt('return', this.signInUserSession);\n\t\n\t              case 9:\n\t              case 'end':\n\t                return _context4.stop();\n\t            }\n\t          }\n\t        }, _callee4, this);\n\t      }));\n\t\n\t      function getTokenQueryParameter(_x3) {\n\t        return _ref5.apply(this, arguments);\n\t      }\n\t\n\t      return getTokenQueryParameter;\n\t    }()\n\t\n\t    /**\n\t     * Get cached tokens and scopes and return a new session using all the cached data.\n\t     * @returns {CognitoAuthSession} the auth session\n\t     */\n\t\n\t  }, {\n\t    key: 'getCachedSession',\n\t    value: function getCachedSession() {\n\t      if (!this.username) {\n\t        return new _CognitoAuthSession2.default();\n\t      }\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId() + '.' + this.username;\n\t      var idTokenKey = keyPrefix + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.refreshToken';\n\t      var scopeKey = keyPrefix + '.tokenScopesString';\n\t\n\t      var scopesString = this.storage.getItem(scopeKey);\n\t      var scopesArray = [];\n\t      if (scopesString) {\n\t        scopesArray = scopesString.split(' ');\n\t      }\n\t      var tokenScopes = new _CognitoTokenScopes2.default(scopesArray);\n\t      var idToken = new _CognitoIdToken2.default(this.storage.getItem(idTokenKey));\n\t      var accessToken = new _CognitoAccessToken2.default(this.storage.getItem(accessTokenKey));\n\t      var refreshToken = new _CognitoRefreshToken2.default(this.storage.getItem(refreshTokenKey));\n\t\n\t      var sessionData = {\n\t        IdToken: idToken,\n\t        AccessToken: accessToken,\n\t        RefreshToken: refreshToken,\n\t        TokenScopes: tokenScopes\n\t      };\n\t      var cachedSession = new _CognitoAuthSession2.default(sessionData);\n\t      return cachedSession;\n\t    }\n\t\n\t    /**\n\t     * This is used to get last signed in user from local storage\n\t     * @returns {string} the last user name\n\t     */\n\t\n\t  }, {\n\t    key: 'getLastUser',\n\t    value: function getLastUser() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var lastUserName = this.storage.getItem(lastUserKey);\n\t      if (lastUserName) {\n\t        return lastUserName;\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * This is used to save the session tokens and scopes to local storage\n\t     * Input parameter is a set of strings.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'cacheTokensScopes',\n\t    value: function cacheTokensScopes() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var tokenUserName = this.signInUserSession.getAccessToken().getUsername();\n\t      this.username = tokenUserName;\n\t      var idTokenKey = keyPrefix + '.' + tokenUserName + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + tokenUserName + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + tokenUserName + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var scopeKey = keyPrefix + '.' + tokenUserName + '.tokenScopesString';\n\t      var scopesArray = this.signInUserSession.getTokenScopes().getScopes();\n\t      var scopesString = scopesArray.join(' ');\n\t      this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n\t      this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n\t      this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n\t      this.storage.setItem(lastUserKey, tokenUserName);\n\t      this.storage.setItem(scopeKey, scopesString);\n\t    }\n\t\n\t    /**\n\t     * Compare two sets if they are identical.\n\t     * @param {set} set1 one set\n\t     * @param {set} set2 the other set\n\t     * @returns {boolean} boolean value is true if two sets are identical\n\t     */\n\t\n\t  }, {\n\t    key: 'compareSets',\n\t    value: function compareSets(set1, set2) {\n\t      if (set1.size !== set2.size) {\n\t        return false;\n\t      }\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = set1[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var item = _step.value;\n\t\n\t          if (!set2.has(item)) {\n\t            return false;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * @param {string} url the url string\n\t     * Get the hostname from url.\n\t     * @returns {string} hostname string\n\t     */\n\t\n\t  }, {\n\t    key: 'getHostName',\n\t    value: function getHostName(url) {\n\t      var match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\n\t      if (match != null && match.length > 2 && _typeof(match[2]) === this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\n\t        return match[2];\n\t      }\n\t      return undefined;\n\t    }\n\t\n\t    /**\n\t     * Get http query parameters and return them as a map.\n\t     * @param {string} url the url string\n\t     * @param {string} splitMark query parameters split mark (prefix)\n\t     * @returns {map} map\n\t     */\n\t\n\t  }, {\n\t    key: 'getQueryParameters',\n\t    value: function getQueryParameters(url, splitMark) {\n\t      var str = String(url).split(splitMark);\n\t      var url2 = str[1];\n\t      var str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\n\t      var num = str1.length;\n\t      var map = new Map();\n\t      var i = void 0;\n\t      for (i = 0; i < num; i++) {\n\t        str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\n\t        map.set(str1[i][0], str1[i][1]);\n\t      }\n\t      return map;\n\t    }\n\t\n\t    /**\n\t     * helper function to generate a random string\n\t     * @param {int} length the length of string\n\t     * @param {string} chars a original string\n\t     * @returns {string} a random value.\n\t     */\n\t\n\t  }, {\n\t    key: 'generateRandomString',\n\t    value: function generateRandomString(length, chars) {\n\t      var result = '';\n\t      var i = length;\n\t      for (; i > 0; --i) {\n\t        result += chars[Math.round(Math.random() * (chars.length - 1))];\n\t      }return result;\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the session tokens and scopes from local storage\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clearCachedTokensScopes',\n\t    value: function clearCachedTokensScopes() {\n\t      var keyPrefix = 'CognitoIdentityServiceProvider.' + this.getClientId();\n\t      var idTokenKey = keyPrefix + '.' + this.username + '.idToken';\n\t      var accessTokenKey = keyPrefix + '.' + this.username + '.accessToken';\n\t      var refreshTokenKey = keyPrefix + '.' + this.username + '.refreshToken';\n\t      var lastUserKey = keyPrefix + '.LastAuthUser';\n\t      var scopeKey = keyPrefix + '.' + this.username + '.tokenScopesString';\n\t\n\t      this.storage.removeItem(idTokenKey);\n\t      this.storage.removeItem(accessTokenKey);\n\t      this.storage.removeItem(refreshTokenKey);\n\t      this.storage.removeItem(lastUserKey);\n\t      this.storage.removeItem(scopeKey);\n\t    }\n\t\n\t    /**\n\t     * This is used to build a user session from tokens retrieved in the authentication result\n\t     * @param {object} refreshToken authResult Successful auth response from server.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'refreshSession',\n\t    value: function () {\n\t      var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(refreshToken) {\n\t        var url, header, body, response, signInUserSession;\n\t        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n\t          while (1) {\n\t            switch (_context5.prev = _context5.next) {\n\t              case 0:\n\t                // https POST call for refreshing token\n\t                url = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n\t                header = this.getCognitoConstants().HEADER;\n\t                body = { grant_type: this.getCognitoConstants().REFRESHTOKEN,\n\t                  client_id: this.getClientId(),\n\t                  redirect_uri: this.RedirectUriSignIn,\n\t                  refresh_token: refreshToken };\n\t                // const boundOnSuccess = (this.onSuccessRefreshToken).bind(this);\n\t                // const boundOnFailure = (this.onFailure).bind(this);\n\t                // this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n\t\n\t                _context5.next = 5;\n\t                return this.makePOSTRequest(header, body, url);\n\t\n\t              case 5:\n\t                response = _context5.sent;\n\t                _context5.next = 8;\n\t                return this.onSuccessRefreshToken(response);\n\t\n\t              case 8:\n\t                signInUserSession = _context5.sent;\n\t                return _context5.abrupt('return', signInUserSession);\n\t\n\t              case 10:\n\t              case 'end':\n\t                return _context5.stop();\n\t            }\n\t          }\n\t        }, _callee5, this);\n\t      }));\n\t\n\t      function refreshSession(_x4) {\n\t        return _ref6.apply(this, arguments);\n\t      }\n\t\n\t      return refreshSession;\n\t    }()\n\t\n\t    /**\n\t     * Make the http POST request.\n\t     * @param {JSON} header header JSON object\n\t     * @param {JSON} body body JSON object\n\t     * @param {string} url string\n\t     * @param {function} onSuccess callback\n\t     * @param {function} onFailure callback\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'makePOSTRequest',\n\t    value: function makePOSTRequest(header, body, url) {\n\t      var _this = this;\n\t\n\t      var onSuccess = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\t      var onFailure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\t\n\t      return new Promise(function (resolve, reject) {\n\t\n\t        // This is a sample server that supports CORS.\n\t        var xhr = _this.createCORSRequest(_this.getCognitoConstants().POST, url);\n\t        var bodyString = '';\n\t        if (!xhr) {\n\t          return;\n\t        }\n\t        // set header\n\t        for (var key in header) {\n\t          xhr.setRequestHeader(key, header[key]);\n\t        }\n\t        for (var _key in body) {\n\t          bodyString = bodyString.concat(_key, _this.getCognitoConstants().EQUALSIGN, body[_key], _this.getCognitoConstants().AMPERSAND);\n\t        }\n\t        bodyString = bodyString.substring(0, bodyString.length - 1);\n\t        xhr.send(bodyString);\n\t        xhr.onreadystatechange = function addressState() {\n\t          if (xhr.readyState === 4) {\n\t            if (xhr.status === 200) {\n\t              // onSuccess(xhr.responseText);\n\t              // return xhr.responseText\n\t              resolve(xhr.responseText);\n\t            } else {\n\t              // onFailure(xhr.responseText);\n\t              // throw xhr.responseText\n\t              reject(xhr.responseText);\n\t            }\n\t          }\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Create the XHR object\n\t     * @param {string} method which method to call\n\t     * @param {string} url the url string\n\t     * @returns {object} xhr\n\t     */\n\t\n\t  }, {\n\t    key: 'createCORSRequest',\n\t    value: function createCORSRequest(method, url) {\n\t      var xhr = new XMLHttpRequest();\n\t      xhr.open(method, url, true);\n\t      if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\n\t        // XHR for Chrome/Firefox/Opera/Safari.\n\t        xhr.open(method, url, true);\n\t      } else if ((typeof XDomainRequest === 'undefined' ? 'undefined' : _typeof(XDomainRequest)) !== this.getCognitoConstants().UNDEFINED) {\n\t        // XDomainRequest for IE.\n\t        xhr = new XDomainRequest();\n\t        xhr.open(method, url);\n\t      } else {\n\t        // CORS not supported.\n\t        xhr = null;\n\t      }\n\t      return xhr;\n\t    }\n\t\n\t    /**\n\t     * The http POST request onFailure callback.\n\t     * @param {object} err the error object\n\t     * @returns {function} onFailure\n\t     */\n\t\n\t  }, {\n\t    key: 'onFailure',\n\t    value: function onFailure(err) {\n\t      this.userhandler.onFailure(err);\n\t    }\n\t\n\t    /**\n\t     * The http POST request onSuccess callback when refreshing tokens.\n\t     * @param {JSON} jsonData tokens\n\t     */\n\t\n\t  }, {\n\t    key: 'onSuccessRefreshToken',\n\t    value: function () {\n\t      var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(jsonData) {\n\t        var jsonDataObject, URL;\n\t        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n\t          while (1) {\n\t            switch (_context6.prev = _context6.next) {\n\t              case 0:\n\t                jsonDataObject = JSON.parse(jsonData);\n\t\n\t                if (!Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ERROR)) {\n\t                  _context6.next = 6;\n\t                  break;\n\t                }\n\t\n\t                URL = this.getFQDNSignIn();\n\t\n\t                this.launchUri(URL);\n\t                _context6.next = 10;\n\t                break;\n\t\n\t              case 6:\n\t                if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().IDTOKEN)) {\n\t                  this.signInUserSession.setIdToken(new _CognitoIdToken2.default(jsonDataObject.id_token));\n\t                }\n\t                if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ACCESSTOKEN)) {\n\t                  this.signInUserSession.setAccessToken(new _CognitoAccessToken2.default(jsonDataObject.access_token));\n\t                }\n\t                this.cacheTokensScopes();\n\t                // this.userhandler.onSuccess(this.signInUserSession);\n\t                return _context6.abrupt('return', this.signInUserSession);\n\t\n\t              case 10:\n\t              case 'end':\n\t                return _context6.stop();\n\t            }\n\t          }\n\t        }, _callee6, this);\n\t      }));\n\t\n\t      function onSuccessRefreshToken(_x7) {\n\t        return _ref7.apply(this, arguments);\n\t      }\n\t\n\t      return onSuccessRefreshToken;\n\t    }()\n\t\n\t    /**\n\t     * The http POST request onSuccess callback when exchanging code for tokens.\n\t     * @param {JSON} jsonData tokens\n\t     */\n\t\n\t  }, {\n\t    key: 'onSuccessExchangeForToken',\n\t    value: function () {\n\t      var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(jsonData) {\n\t        var jsonDataObject, refreshToken, accessToken, idToken, state;\n\t        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n\t          while (1) {\n\t            switch (_context7.prev = _context7.next) {\n\t              case 0:\n\t                jsonDataObject = JSON.parse(jsonData);\n\t                refreshToken = new _CognitoRefreshToken2.default();\n\t                accessToken = new _CognitoAccessToken2.default();\n\t                idToken = new _CognitoIdToken2.default();\n\t                state = null;\n\t\n\t                if (!Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ERROR)) {\n\t                  _context7.next = 7;\n\t                  break;\n\t                }\n\t\n\t                throw jsonData;\n\t\n\t              case 7:\n\t                if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().IDTOKEN)) {\n\t                  this.signInUserSession.setIdToken(new _CognitoIdToken2.default(jsonDataObject.id_token));\n\t                } else {\n\t                  this.signInUserSession.setIdToken(idToken);\n\t                }\n\t                if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().ACCESSTOKEN)) {\n\t                  this.signInUserSession.setAccessToken(new _CognitoAccessToken2.default(jsonDataObject.access_token));\n\t                } else {\n\t                  this.signInUserSession.setAccessToken(accessToken);\n\t                }\n\t                if (Object.prototype.hasOwnProperty.call(jsonDataObject, this.getCognitoConstants().REFRESHTOKEN)) {\n\t                  this.signInUserSession.setRefreshToken(new _CognitoRefreshToken2.default(jsonDataObject.refresh_token));\n\t                } else {\n\t                  this.signInUserSession.setRefreshToken(refreshToken);\n\t                }\n\t                this.cacheTokensScopes();\n\t                // this.userhandler.onSuccess(this.signInUserSession);\n\t                return _context7.abrupt('return', this.signInUserSession);\n\t\n\t              case 12:\n\t              case 'end':\n\t                return _context7.stop();\n\t            }\n\t          }\n\t        }, _callee7, this);\n\t      }));\n\t\n\t      function onSuccessExchangeForToken(_x8) {\n\t        return _ref8.apply(this, arguments);\n\t      }\n\t\n\t      return onSuccessExchangeForToken;\n\t    }()\n\t\n\t    /**\n\t     * Launch Cognito Auth UI page.\n\t     * @param {string} URL the url to launch\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'launchUri',\n\t    value: function launchUri(URL) {\n\t      window.open(URL, this.getCognitoConstants().SELF);\n\t    }\n\t\n\t    /**\n\t     * @returns {string} scopes string\n\t     */\n\t\n\t  }, {\n\t    key: 'getSpaceSeperatedScopeString',\n\t    value: function getSpaceSeperatedScopeString() {\n\t      var tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\n\t      tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\n\t      return encodeURIComponent(tokenScopesString);\n\t    }\n\t\n\t    /**\n\t     * Create the FQDN(fully qualified domain name) for authorization endpoint.\n\t     * @returns {string} url\n\t     */\n\t\n\t  }, {\n\t    key: 'getFQDNSignIn',\n\t    value: function getFQDNSignIn() {\n\t      if (this.state == null) {\n\t        this.state = this.generateRandomString(this.getCognitoConstants().STATELENGTH, this.getCognitoConstants().STATEORIGINSTRING);\n\t      }\n\t\n\t      var identityProviderParam = this.IdentityProvider ? this.getCognitoConstants().AMPERSAND.concat(this.getCognitoConstants().DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER, this.getCognitoConstants().EQUALSIGN, this.IdentityProvider) : '';\n\t      var tokenScopesString = this.getSpaceSeperatedScopeString();\n\t\n\t      var userContextDataParam = '';\n\t      var userContextData = this.getUserContextData();\n\t      if (userContextData) {\n\t        userContextDataParam = this.getCognitoConstants().AMPERSAND + this.getCognitoConstants().DOMAIN_QUERY_PARAM_USERCONTEXTDATA + this.getCognitoConstants().EQUALSIGN + this.getUserContextData();\n\t      }\n\t\n\t      // Build the complete web domain to launch the login screen\n\t      var uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN, this.getCognitoConstants().QUESTIONMARK, this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI, this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE, this.getCognitoConstants().EQUALSIGN, this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID, this.getCognitoConstants().EQUALSIGN, this.getClientId(), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE, this.getCognitoConstants().EQUALSIGN, this.state, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString, identityProviderParam, userContextDataParam);\n\t\n\t      return uri;\n\t    }\n\t\n\t    /**\n\t     * Sign out the user.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'signOut',\n\t    value: function signOut() {\n\t      var URL = this.getFQDNSignOut();\n\t      this.signInUserSession = null;\n\t      this.clearCachedTokensScopes();\n\t      this.launchUri(URL);\n\t    }\n\t\n\t    /**\n\t     * Create the FQDN(fully qualified domain name) for signout endpoint.\n\t     * @returns {string} url\n\t     */\n\t\n\t  }, {\n\t    key: 'getFQDNSignOut',\n\t    value: function getFQDNSignOut() {\n\t      var uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(), this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT, this.getCognitoConstants().QUESTIONMARK, this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI, this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut), this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID, this.getCognitoConstants().EQUALSIGN, this.getClientId());\n\t      return uri;\n\t    }\n\t\n\t    /**\n\t     * This method returns the encoded data string used for cognito advanced security feature.\n\t     * This would be generated only when developer has included the JS used for collecting the\n\t     * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n\t     * features\n\t     **/\n\t\n\t  }, {\n\t    key: 'getUserContextData',\n\t    value: function getUserContextData() {\n\t      if (typeof AmazonCognitoAdvancedSecurityData === \"undefined\") {\n\t        return;\n\t      }\n\t\n\t      var _username = \"\";\n\t      if (this.username) {\n\t        _username = this.username;\n\t      }\n\t\n\t      var _userpoolId = \"\";\n\t      if (this.userpoolId) {\n\t        _userpoolId = this.userpoolId;\n\t      }\n\t\n\t      if (this.advancedSecurityDataCollectionFlag) {\n\t        return AmazonCognitoAdvancedSecurityData.getData(_username, _userpoolId, this.clientId);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Helper method to let the user know if he has either a valid cached session \n\t     * or a valid authenticated session from the app integration callback.\n\t     * @returns {boolean} userSignedIn \n\t     */\n\t\n\t  }, {\n\t    key: 'isUserSignedIn',\n\t    value: function isUserSignedIn() {\n\t      return this.signInUserSession != null && this.signInUserSession.isValid() || this.getCachedSession() != null && this.getCachedSession().isValid();\n\t    }\n\t  }]);\n\t\n\t  return CognitoAuth;\n\t}();\n\t\n\texports.default = CognitoAuth;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _jsCookie = __webpack_require__(11);\n\t\n\tvar Cookies = _interopRequireWildcard(_jsCookie);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** @class */\n\tvar CookieStorage = function () {\n\t\n\t  /**\n\t   * Constructs a new CookieStorage object\n\t   * @param {object} data Creation options.\n\t   * @param {string} data.domain Cookies domain (mandatory).\n\t   * @param {string} data.path Cookies path (default: '/')\n\t   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n\t   * @param {boolean} data.secure Cookie secure flag (default: true)\n\t   */\n\t  function CookieStorage(data) {\n\t    _classCallCheck(this, CookieStorage);\n\t\n\t    this.domain = data.domain;\n\t    if (data.path) {\n\t      this.path = data.path;\n\t    } else {\n\t      this.path = '/';\n\t    }\n\t    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n\t      this.expires = data.expires;\n\t    } else {\n\t      this.expires = 365;\n\t    }\n\t    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n\t      this.secure = data.secure;\n\t    } else {\n\t      this.secure = true;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * This is used to set a specific item in storage\n\t   * @param {string} key - the key for the item\n\t   * @param {object} value - the value\n\t   * @returns {string} value that was set\n\t   */\n\t\n\t\n\t  _createClass(CookieStorage, [{\n\t    key: 'setItem',\n\t    value: function setItem(key, value) {\n\t      Cookies.set(key, value, {\n\t        path: this.path,\n\t        expires: this.expires,\n\t        domain: this.domain,\n\t        secure: this.secure\n\t      });\n\t      return Cookies.get(key);\n\t    }\n\t\n\t    /**\n\t     * This is used to get a specific key from storage\n\t     * @param {string} key - the key for the item\n\t     * This is used to clear the storage\n\t     * @returns {string} the data item\n\t     */\n\t\n\t  }, {\n\t    key: 'getItem',\n\t    value: function getItem(key) {\n\t      return Cookies.get(key);\n\t    }\n\t\n\t    /**\n\t     * This is used to remove an item from storage\n\t     * @param {string} key - the key being set\n\t     * @returns {string} value - value that was deleted\n\t     */\n\t\n\t  }, {\n\t    key: 'removeItem',\n\t    value: function removeItem(key) {\n\t      return Cookies.remove(key, {\n\t        path: this.path,\n\t        domain: this.domain,\n\t        secure: this.secure\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This is used to clear the storage\n\t     * @returns {string} nothing\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      var cookies = Cookies.get();\n\t      var index = void 0;\n\t      for (index = 0; index < cookies.length; ++index) {\n\t        Cookies.remove(cookies[index]);\n\t      }\n\t      return {};\n\t    }\n\t  }]);\n\t\n\t  return CookieStorage;\n\t}();\n\t\n\texports.default = CookieStorage;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/*!\n\t * Amazon Cognito Auth SDK for JavaScript\n\t * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\t\n\t * Licensed under the Apache License, Version 2.0 (the \"License\").\n\t * You may not use this file except in compliance with the License.\n\t * A copy of the License is located at\n\t *\n\t *         http://aws.amazon.com/apache2.0/\n\t *\n\t * or in the \"license\" file accompanying this file.\n\t * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n\t * OR CONDITIONS OF ANY KIND, either express or implied. See the\n\t * License for the specific language governing permissions\n\t * and limitations under the License.\n\t */\n\tvar monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\tvar weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\t\n\t/** @class */\n\t\n\tvar DateHelper = function () {\n\t  function DateHelper() {\n\t    _classCallCheck(this, DateHelper);\n\t  }\n\t\n\t  _createClass(DateHelper, [{\n\t    key: 'getNowString',\n\t\n\t    /**\n\t     * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n\t     */\n\t    value: function getNowString() {\n\t      var now = new Date();\n\t\n\t      var weekDay = weekNames[now.getUTCDay()];\n\t      var month = monthNames[now.getUTCMonth()];\n\t      var day = now.getUTCDate();\n\t\n\t      var hours = now.getUTCHours();\n\t      if (hours < 10) {\n\t        hours = '0' + hours;\n\t      }\n\t\n\t      var minutes = now.getUTCMinutes();\n\t      if (minutes < 10) {\n\t        minutes = '0' + minutes;\n\t      }\n\t\n\t      var seconds = now.getUTCSeconds();\n\t      if (seconds < 10) {\n\t        seconds = '0' + seconds;\n\t      }\n\t\n\t      var year = now.getUTCFullYear();\n\t\n\t      // ddd MMM D HH:mm:ss UTC YYYY\n\t      var dateNow = weekDay + ' ' + month + ' ' + day + ' ' + hours + ':' + minutes + ':' + seconds + ' UTC ' + year;\n\t\n\t      return dateNow;\n\t    }\n\t  }]);\n\t\n\t  return DateHelper;\n\t}();\n\t\n\texports.default = DateHelper;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _CognitoAccessToken = __webpack_require__(1);\n\t\n\tObject.defineProperty(exports, 'CognitoAccessToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAccessToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoIdToken = __webpack_require__(2);\n\t\n\tObject.defineProperty(exports, 'CognitoIdToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoIdToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoRefreshToken = __webpack_require__(3);\n\t\n\tObject.defineProperty(exports, 'CognitoRefreshToken', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoRefreshToken).default;\n\t  }\n\t});\n\t\n\tvar _CognitoTokenScopes = __webpack_require__(4);\n\t\n\tObject.defineProperty(exports, 'CognitoTokenScopes', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoTokenScopes).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAuth = __webpack_require__(7);\n\t\n\tObject.defineProperty(exports, 'CognitoAuth', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAuth).default;\n\t  }\n\t});\n\t\n\tvar _CognitoAuthSession = __webpack_require__(5);\n\t\n\tObject.defineProperty(exports, 'CognitoAuthSession', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CognitoAuthSession).default;\n\t  }\n\t});\n\t\n\tvar _DateHelper = __webpack_require__(9);\n\t\n\tObject.defineProperty(exports, 'DateHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_DateHelper).default;\n\t  }\n\t});\n\t\n\tvar _StorageHelper = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'StorageHelper', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_StorageHelper).default;\n\t  }\n\t});\n\t\n\tvar _CookieStorage = __webpack_require__(8);\n\t\n\tObject.defineProperty(exports, 'CookieStorage', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _interopRequireDefault(_CookieStorage).default;\n\t  }\n\t});\n\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * JavaScript Cookie v2.2.0\n\t * https://github.com/js-cookie/js-cookie\n\t *\n\t * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n\t * Released under the MIT license\n\t */\n\t;(function (factory) {\n\t\tvar registeredInModuleLoader = false;\n\t\tif (true) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t\tregisteredInModuleLoader = true;\n\t\t}\n\t\tif (true) {\n\t\t\tmodule.exports = factory();\n\t\t\tregisteredInModuleLoader = true;\n\t\t}\n\t\tif (!registeredInModuleLoader) {\n\t\t\tvar OldCookies = window.Cookies;\n\t\t\tvar api = window.Cookies = factory();\n\t\t\tapi.noConflict = function () {\n\t\t\t\twindow.Cookies = OldCookies;\n\t\t\t\treturn api;\n\t\t\t};\n\t\t}\n\t}(function () {\n\t\tfunction extend () {\n\t\t\tvar i = 0;\n\t\t\tvar result = {};\n\t\t\tfor (; i < arguments.length; i++) {\n\t\t\t\tvar attributes = arguments[ i ];\n\t\t\t\tfor (var key in attributes) {\n\t\t\t\t\tresult[key] = attributes[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\n\t\tfunction init (converter) {\n\t\t\tfunction api (key, value, attributes) {\n\t\t\t\tvar result;\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Write\n\t\n\t\t\t\tif (arguments.length > 1) {\n\t\t\t\t\tattributes = extend({\n\t\t\t\t\t\tpath: '/'\n\t\t\t\t\t}, api.defaults, attributes);\n\t\n\t\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\n\t\t\t\t\tif (!converter.write) {\n\t\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\t\n\t\t\t\t\tvar stringifiedAttributes = '';\n\t\n\t\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t\t}\n\t\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t\t}\n\t\n\t\t\t\t// Read\n\t\n\t\t\t\tif (!key) {\n\t\t\t\t\tresult = {};\n\t\t\t\t}\n\t\n\t\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t\t// calling \"get()\"\n\t\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\t\tvar i = 0;\n\t\n\t\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\t\tvar cookie = parts.slice(1).join('=');\n\t\n\t\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t\t}\n\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\t\n\t\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (!key) {\n\t\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}\n\t\n\t\t\t\treturn result;\n\t\t\t}\n\t\n\t\t\tapi.set = api;\n\t\t\tapi.get = function (key) {\n\t\t\t\treturn api.call(api, key);\n\t\t\t};\n\t\t\tapi.getJSON = function () {\n\t\t\t\treturn api.apply({\n\t\t\t\t\tjson: true\n\t\t\t\t}, [].slice.call(arguments));\n\t\t\t};\n\t\t\tapi.defaults = {};\n\t\n\t\t\tapi.remove = function (key, attributes) {\n\t\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\t\texpires: -1\n\t\t\t\t}));\n\t\t\t};\n\t\n\t\t\tapi.withConverter = init;\n\t\n\t\t\treturn api;\n\t\t}\n\t\n\t\treturn init(function () {});\n\t}));\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// amazon-cognito-auth.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3738391c807772c8492c","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport * as enhancements from './src';\n\nexport * from './src';\n\n// The version of crypto-browserify included by aws-sdk only\n// checks for window.crypto, not window.msCrypto as used by\n// IE 11 – so we set it explicitly here\nif (typeof window !== 'undefined' && !window.crypto && window.msCrypto) {\n  window.crypto = window.msCrypto;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./enhance.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoAccessToken {\n  /**\n   * Constructs a new CognitoAccessToken object\n   * @param {string=} AccessToken The JWT access token.\n   */\n  constructor(AccessToken) {\n    // Assign object\n    this.jwtToken = AccessToken || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * Sets new value for access token.\n   * @param {string=} accessToken The JWT access token.\n   * @returns {void}\n   */\n  setJwtToken(accessToken) {\n    this.jwtToken = accessToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    if (this.jwtToken === null) {\n      return undefined;\n    }\n    const jwtPayload = this.jwtToken.split('.')[1];\n    return JSON.parse(atob(jwtPayload)).exp;\n  }\n\n  /**\n   * @returns {string} the username from payload.\n   */\n  getUsername() {\n    if (this.jwtToken === null) {\n      return undefined;\n    }\n    const jwtPayload = this.jwtToken.split('.')[1];\n    return JSON.parse(atob(jwtPayload)).username;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */\n  decodePayload() {\n    const jwtPayload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(atob(jwtPayload));\n    } catch (err) {\n      return {};\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAccessToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoIdToken {\n  /**\n   * Constructs a new CognitoIdToken object\n   * @param {string=} IdToken The JWT Id token\n   */\n  constructor(IdToken) {\n    // Assign object\n    this.jwtToken = IdToken || '';\n    this.payload = this.decodePayload();\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getJwtToken() {\n    return this.jwtToken;\n  }\n\n  /**\n   * Sets new value for id token.\n   * @param {string=} idToken The JWT Id token\n   * @returns {void}\n   */\n  setJwtToken(idToken) {\n    this.jwtToken = idToken;\n  }\n\n  /**\n   * @returns {int} the token's expiration (exp member).\n   */\n  getExpiration() {\n    if (this.jwtToken === null) {\n      return undefined;\n    }\n    const jwtPayload = this.jwtToken.split('.')[1];\n    return JSON.parse(atob(jwtPayload)).exp;\n  }\n\n  /**\n   * @returns {object} the token's payload.\n   */\n  decodePayload() {\n    const jwtPayload = this.jwtToken.split('.')[1];\n    try {\n      return JSON.parse(atob(jwtPayload));\n    } catch (err) {\n      return {};\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoIdToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoRefreshToken {\n  /**\n   * Constructs a new CognitoRefreshToken object\n   * @param {string=} RefreshToken The JWT refresh token.\n   */\n  constructor(RefreshToken) {\n    // Assign object\n    this.refreshToken = RefreshToken || '';\n  }\n\n  /**\n   * @returns {string} the record's token.\n   */\n  getToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * Sets new value for refresh token.\n   * @param {string=} refreshToken The JWT refresh token.\n   * @returns {void}\n   */\n  setToken(refreshToken) {\n    this.refreshToken = refreshToken;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoRefreshToken.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\n/** @class */\nexport default class CognitoTokenScopes {\n  /**\n   * Constructs a new CognitoTokenScopes object\n   * @param {array=} TokenScopesArray The token scopes\n   */\n  constructor(TokenScopesArray) {\n    // Assign object\n    this.tokenScopes = TokenScopesArray || [];\n  }\n\n  /**\n   * @returns {Array} the token scopes.\n   */\n  getScopes() {\n    return this.tokenScopes;\n  }\n\n  /**\n   * Sets new value for token scopes.\n   * @param {array=} tokenScopes The token scopes\n   * @returns {void}\n   */\n  setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoTokenScopes.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport CognitoTokenScopes from './CognitoTokenScopes';\nimport CognitoAccessToken from './CognitoAccessToken';\nimport CognitoIdToken from './CognitoIdToken';\nimport CognitoRefreshToken from './CognitoRefreshToken';\n\n/** @class */\nexport default class CognitoAuthSession {\n\t/**\n\t * Constructs a new CognitoUserSession object\n\t * @param {CognitoIdToken} IdToken The session's Id token.\n\t * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n\t * @param {CognitoAccessToken} AccessToken The session's access token.\n\t * @param {array}  TokenScopes  The session's token scopes.\n   * @param {string} State The session's state. \n\t */\n  constructor({ IdToken, RefreshToken, AccessToken, TokenScopes, State } = {}) {\n    if (IdToken) {\n      this.idToken = IdToken;\n    } else {\n      this.idToken = new CognitoIdToken();\n    }\n    if (RefreshToken) {\n      this.refreshToken = RefreshToken;\n    } else {\n      this.refreshToken = new CognitoRefreshToken();\n    }\n    if (AccessToken) {\n      this.accessToken = AccessToken;\n    } else {\n      this.accessToken = new CognitoAccessToken();\n    }\n    if (TokenScopes) {\n      this.tokenScopes = TokenScopes;\n    } else {\n      this.tokenScopes = new CognitoTokenScopes();\n    }\n    if (State) {\n      this.state = State;\n    } else {\n      this.state = null;\n    }\n  }\n\n  /**\n   * @returns {CognitoIdToken} the session's Id token\n   */\n  getIdToken() {\n    return this.idToken;\n  }\n\n  /**\n   * Set a new Id token\n   * @param {CognitoIdToken} IdToken The session's Id token.\n   * @returns {void}\n   */\n  setIdToken(IdToken) {\n    this.idToken = IdToken;\n  }\n\n  /**\n   * @returns {CognitoRefreshToken} the session's refresh token\n   */\n  getRefreshToken() {\n    return this.refreshToken;\n  }\n\n  /**\n   * Set a new Refresh token\n   * @param {CognitoRefreshToken} RefreshToken The session's refresh token.\n   * @returns {void}\n   */\n  setRefreshToken(RefreshToken) {\n    this.refreshToken = RefreshToken;\n  }\n\n  /**\n   * @returns {CognitoAccessToken} the session's access token\n   */\n  getAccessToken() {\n    return this.accessToken;\n  }\n\n  /**\n   * Set a new Access token\n   * @param {CognitoAccessToken} AccessToken The session's access token.\n   * @returns {void}\n   */\n  setAccessToken(AccessToken) {\n    this.accessToken = AccessToken;\n  }\n\n  /**\n   * @returns {CognitoTokenScopes} the session's token scopes\n   */\n  getTokenScopes() {\n    return this.tokenScopes;\n  }\n\n  /**\n   * Set new token scopes\n   * @param {array}  tokenScopes  The session's token scopes.\n   * @returns {void}\n   */\n  setTokenScopes(tokenScopes) {\n    this.tokenScopes = tokenScopes;\n  }\n\n  /**\n   * @returns {string} the session's state\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Set new state\n   * @param {string}  state  The session's state.\n   * @returns {void}\n   */\n  setState(State) {\n    this.state = State;\n  }\n\n  /**\n   * Checks to see if the session is still valid based on session expiry information found\n   * in Access and Id Tokens and the current time\n   * @returns {boolean} if the session is still valid\n   */\n  isValid() {\n    const now = Math.floor(new Date() / 1000);\n    try {\n      if (this.accessToken != null) {\n        return now < this.accessToken.getExpiration();\n      }\n      if (this.idToken != null) {\n        return now < this.idToken.getExpiration();\n      }\n      return false;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuthSession.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\nlet dataMemory = {};\n\n/** @class */\nclass MemoryStorage {\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  static setItem(key, value) {\n    dataMemory[key] = value;\n    return dataMemory[key];\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  static getItem(key) {\n    return Object.prototype.hasOwnProperty.call(dataMemory, key) ? dataMemory[key] : undefined;\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  static removeItem(key) {\n    return delete dataMemory[key];\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  static clear() {\n    dataMemory = {};\n    return dataMemory;\n  }\n}\n\n/** @class */\nexport default class StorageHelper {\n\n  /**\n   * This is used to get a storage object\n   * @returns {object} the storage\n   */\n  constructor() {\n    try {\n      this.storageWindow = window.localStorage;\n      this.storageWindow.setItem('aws.cognito.test-ls', 1);\n      this.storageWindow.removeItem('aws.cognito.test-ls');\n    } catch (exception) {\n      this.storageWindow = MemoryStorage;\n    }\n  }\n\n  /**\n   * This is used to return the storage\n   * @returns {object} the storage\n   */\n  getStorage() {\n    return this.storageWindow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/StorageHelper.js","/*!\n  * Amazon Cognito Auth SDK for JavaScript\n  * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\").\n  * You may not use this file except in compliance with the License.\n  * A copy of the License is located at\n  *\n  *         http://aws.amazon.com/apache2.0/\n  *\n  * or in the \"license\" file accompanying this file.\n  * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n  * OR CONDITIONS OF ANY KIND, either express or implied. See the\n  * License for the specific language governing permissions\n  * and limitations under the License.\n  */\n\n  import CognitoTokenScopes from './CognitoTokenScopes';\n  import CognitoAccessToken from './CognitoAccessToken';\n  import CognitoIdToken from './CognitoIdToken';\n  import CognitoRefreshToken from './CognitoRefreshToken';\n  import CognitoAuthSession from './CognitoAuthSession';\n  import StorageHelper from './StorageHelper';\n  \n  /** @class */\n  export default class CognitoAuth {\n    /**\n     * Constructs a new CognitoAuth object\n     * @param {object} data Creation options\n     * @param {string} data.ClientId Required: User pool application client id.\n     * @param {string} data.AppWebDomain Required: The application/user-pools Cognito web hostname,\n     *                     this is set at the Cognito console.\n     * @param {array} data.TokenScopesArray Optional: The token scopes\n     * @param {string} data.RedirectUriSignIn Required: The redirect Uri,\n     * which will be launched after authentication as signed in.\n     * @param {string} data.RedirectUriSignOut Required:\n     * The redirect Uri, which will be launched when signed out.\n     * @param {string} data.IdentityProvider Optional: Pre-selected identity provider (this allows to\n     * automatically trigger social provider authentication flow).\n     * @param {string} data.UserPoolId Optional: UserPoolId for the configured cognito userPool.\n     * @param {boolean} data.AdvancedSecurityDataCollectionFlag Optional: boolean flag indicating if the\n     *        data collection is enabled to support cognito advanced security features. By default, this\n     *        flag is set to true.\n     * @param {nodeCallback<CognitoAuthSession>} Optional: userhandler Called on success or error.\n     */\n    constructor(data) {\n      const { ClientId, AppWebDomain, TokenScopesArray,\n      RedirectUriSignIn, RedirectUriSignOut, IdentityProvider, UserPoolId,\n      AdvancedSecurityDataCollectionFlag, Storage } = data || { };\n      if (data == null || !ClientId || !AppWebDomain || !RedirectUriSignIn || !RedirectUriSignOut) {\n        throw new Error(this.getCognitoConstants().PARAMETERERROR);\n      }\n  \n      this.clientId = ClientId;\n      this.appWebDomain = AppWebDomain;\n      this.TokenScopesArray = TokenScopesArray || [];\n      if (!Array.isArray(TokenScopesArray)) {\n        throw new Error(this.getCognitoConstants().SCOPETYPEERROR);\n      }\n      const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\n      this.RedirectUriSignIn = RedirectUriSignIn;\n      this.RedirectUriSignOut = RedirectUriSignOut;\n      this.IdentityProvider = IdentityProvider;\n      this.responseType = this.getCognitoConstants().TOKEN;\n      this.storage = Storage || new StorageHelper().getStorage();\n      this.username = this.getLastUser();\n      this.userPoolId = UserPoolId;\n      this.signInUserSession = this.getCachedSession();\n+     this.signInUserSession.setTokenScopes(tokenScopes);\n  \n      /**\n       * By default, AdvancedSecurityDataCollectionFlag is set to true, if no input value is provided.\n       */\n      this.advancedSecurityDataCollectionFlag = true;\n      if (AdvancedSecurityDataCollectionFlag) {\n        this.advancedSecurityDataCollectionFlag = AdvancedSecurityDataCollectionFlag;\n      }\n    }\n  \n    /**\n     * @returns {JSON} the constants\n     */\n    getCognitoConstants() {\n      const CognitoConstants = {\n        DOMAIN_SCHEME: 'https',\n        DOMAIN_PATH_SIGNIN: 'oauth2/authorize',\n        DOMAIN_PATH_TOKEN: 'oauth2/token',\n        DOMAIN_PATH_SIGNOUT: 'logout',\n        DOMAIN_QUERY_PARAM_REDIRECT_URI: 'redirect_uri',\n        DOMAIN_QUERY_PARAM_SIGNOUT_URI: 'logout_uri',\n        DOMAIN_QUERY_PARAM_RESPONSE_TYPE: 'response_type',\n        DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER: 'identity_provider',\n        DOMAIN_QUERY_PARAM_USERCONTEXTDATA: 'userContextData',\n        CLIENT_ID: 'client_id',\n        STATE: 'state',\n        SCOPE: 'scope',\n        TOKEN: 'token',\n        CODE: 'code',\n        POST: 'POST',\n        PARAMETERERROR: 'The parameters: App client Id, App web domain' +\n                        ', the redirect URL when you are signed in and the ' +\n                        'redirect URL when you are signed out are required.',\n        SCOPETYPEERROR: 'Scopes have to be array type. ',\n        QUESTIONMARK: '?',\n        POUNDSIGN: '#',\n        COLONDOUBLESLASH: '://',\n        SLASH: '/',\n        AMPERSAND: '&',\n        EQUALSIGN: '=',\n        SPACE: ' ',\n        CONTENTTYPE: 'Content-Type',\n        CONTENTTYPEVALUE: 'application/x-www-form-urlencoded',\n        AUTHORIZATIONCODE: 'authorization_code',\n        IDTOKEN: 'id_token',\n        ACCESSTOKEN: 'access_token',\n        REFRESHTOKEN: 'refresh_token',\n        ERROR: 'error',\n        ERROR_DESCRIPTION: 'error_description',\n        STRINGTYPE: 'string',\n        STATELENGTH: 32,\n        STATEORIGINSTRING: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n        WITHCREDENTIALS: 'withCredentials',\n        UNDEFINED: 'undefined',\n        SELF: '_self',\n        HOSTNAMEREGEX: /:\\/\\/([0-9]?\\.)?(.[^/:]+)/i,\n        QUERYPARAMETERREGEX1: /#(.+)/,\n        QUERYPARAMETERREGEX2: /=(.+)/,\n        HEADER: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      };\n      return CognitoConstants;\n    }\n  \n    /**\n     * @returns {string} the client id\n     */\n    getClientId() {\n      return this.clientId;\n    }\n  \n    /**\n     * @returns {string} the app web domain\n     */\n    getAppWebDomain() {\n      return this.appWebDomain;\n    }\n  \n    /**\n     * method for getting the current user of the application from the local storage\n     *\n     * @returns {CognitoAuth} the user retrieved from storage\n     */    \n     getCurrentUser() {\n      const lastUserKey = `CognitoIdentityServiceProvider.${this.clientId}.LastAuthUser`;\n  \n      const lastAuthUser = this.storage.getItem(lastUserKey);\n      return lastAuthUser;    \n    }\n  \n    /**\n     * @param {string} Username the user's name\n     * method for setting the current user's name\n     * @returns {void}\n     */\n    setUser(Username) {\n      this.username = Username;\n    }\n  \n    /**\n     * sets response type to 'code'\n     * @returns {void}\n     */\n    useCodeGrantFlow() {\n      this.responseType = this.getCognitoConstants().CODE;\n    }\n  \n    /**\n     * sets response type to 'token'\n     * @returns {void}\n     */\n    useImplicitFlow() {\n      this.responseType = this.getCognitoConstants().TOKEN;\n    }\n  \n    /**\n     * @returns {CognitoAuthSession} the current session for this user\n     */\n    getSignInUserSession() {\n      return this.signInUserSession;\n    }\n  \n    /**\n     * @returns {string} the user's username\n     */\n    getUsername() {\n      return this.username;\n    }\n  \n    /**\n     * @param {string} Username the user's username\n     * @returns {void}\n     */\n    setUsername(Username) {\n      this.username = Username;\n    }\n\n    /**\n     * @returns {string} the user's state\n     */\n    getState() {\n      return this.state;\n    }\n\n    /**\n     * @param {string} State the user's state\n     * @returns {void}\n     */\n    setState(State) {\n      this.state = State;\n    }\n  \n    /**\n     * This is used to get a session, either from the session object\n     * or from the local storage, or by using a refresh token\n     * @param {string} RedirectUriSignIn Required: The redirect Uri,\n     * which will be launched after authentication.\n     * @param {array} TokenScopesArray Required: The token scopes, it is an\n     * array of strings specifying all scopes for the tokens.\n     * @returns {void}\n     */\n\n    async getSession() {\n      const tokenScopesInputSet = new Set(this.TokenScopesArray);\n      const cachedScopesSet = new Set(this.signInUserSession.tokenScopes.getScopes());\n      const URL = this.getFQDNSignIn();\n      if (this.signInUserSession != null && this.signInUserSession.isValid()) {\n        // return this.userhandler.onSuccess(this.signInUserSession);\n        return this.signInUserSession;\n      }\n      this.signInUserSession = this.getCachedSession();\n      // compare scopes\n      if (!this.compareSets(tokenScopesInputSet, cachedScopesSet)) {\n        const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\n        const idToken = new CognitoIdToken();\n        const accessToken = new CognitoAccessToken();\n        const refreshToken = new CognitoRefreshToken();\n        this.signInUserSession.setTokenScopes(tokenScopes);\n        this.signInUserSession.setIdToken(idToken);\n        this.signInUserSession.setAccessToken(accessToken);\n        this.signInUserSession.setRefreshToken(refreshToken);\n        this.launchUri(URL);\n      } else if (this.signInUserSession.isValid()) {\n        // return this.userhandler.onSuccess(this.signInUserSession);\n        return this.signInUserSession;\n      } else if (!this.signInUserSession.getRefreshToken()\n      || !this.signInUserSession.getRefreshToken().getToken()) {\n        this.launchUri(URL);\n      } else {\n        // this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\n        await this.refreshSession(this.signInUserSession.getRefreshToken().getToken());\n        return this.signInUserSession;\n      }\n      // return undefined;\n      throw undefined;\n    }\n\n\n    /**\n     * This is used to start a new session\n     * @param {string} RedirectUriSignIn Required: The redirect Uri,\n     * which will be launched after authentication.\n     * @param {array} TokenScopesArray Required: The token scopes, it is an\n     * array of strings specifying all scopes for the tokens.\n     * @returns {void}\n     */\n\n    startSession() {\n      const URL = this.getFQDNSignIn();\n      const tokenScopes = new CognitoTokenScopes(this.TokenScopesArray);\n      const idToken = new CognitoIdToken();\n      const accessToken = new CognitoAccessToken();\n      const refreshToken = new CognitoRefreshToken();\n      this.signInUserSession.setTokenScopes(tokenScopes);\n      this.signInUserSession.setIdToken(idToken);\n      this.signInUserSession.setAccessToken(accessToken);\n      this.signInUserSession.setRefreshToken(refreshToken);\n      this.launchUri(URL);\n    }\n  \n\n    /**\n     * @param {string} httpRequestResponse the http request response\n     * @returns {void}\n     * Parse the http request response and proceed according to different response types.\n     */\n    async parseCognitoWebResponse(httpRequestResponse) {\n      let map;\n      if (httpRequestResponse.indexOf(this.getCognitoConstants().QUESTIONMARK) > -1) { // for code type\n        // this is to avoid a bug exists when sign in with Google or facebook\n        // Sometimes the code will contain a poundsign in the end which breaks the parsing\n        const response = (httpRequestResponse.split(this.getCognitoConstants().POUNDSIGN))[0];\n        map = this.getQueryParameters(\n          response,\n          this.getCognitoConstants().QUESTIONMARK\n        );\n        // this.getCodeQueryParameter(map);\n        const _response = await this.getCodeQueryParameter(map);\n        return _response;\n      } else if (httpRequestResponse.indexOf(this.getCognitoConstants().POUNDSIGN) > -1) { // for token type\n        map = this.getQueryParameters(\n          httpRequestResponse,\n          this.getCognitoConstants().QUERYPARAMETERREGEX1\n        );\n        if (map.has(this.getCognitoConstants().ERROR)) {\n          return this.userhandler.onFailure(map.get(this.getCognitoConstants().ERROR_DESCRIPTION));\n        }\n        // To use the map to get tokens\n        // this.getTokenQueryParameter(map);\n        const _response = await this.getTokenQueryParameter(map);\n        return _response;\n        \n      }\n    }\n  \n\n    // done -2\n    /**\n     * @param {map} Query parameter map \n     * @returns {void}\n     * Get the query parameter map and proceed according to code response type.\n     */\n    async getCodeQueryParameter(map) {\n      const state = null;\n      if (map.has(this.getCognitoConstants().STATE)) {\n        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n      } else {\n        this.signInUserSession.setState(state);\n      }\n\n      if (map.has(this.getCognitoConstants().CODE)) {\n        // if the response contains code\n        // To parse the response and get the code value.\n        const codeParameter = map.get(this.getCognitoConstants().CODE);\n        const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n        this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n        this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n        const header = this.getCognitoConstants().HEADER;\n        const body = { grant_type: this.getCognitoConstants().AUTHORIZATIONCODE,\n          client_id: this.getClientId(),\n          redirect_uri: this.RedirectUriSignIn,\n          code: codeParameter };\n        // const boundOnSuccess = (this.onSuccessExchangeForToken).bind(this);\n        // const boundOnFailure = (this.onFailure).bind(this);\n        // this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n        const _response =  await this.makePOSTRequest(header, body, url);\n        await this.onSuccessExchangeForToken(_response)\n        return this.signInUserSession;\n      }\n      return null;\n    }\n  \n\n    // done -2\n    /**\n     * Get the query parameter map and proceed according to token response type.\n     * @param {map} Query parameter map \n     * @returns {void}\n     */\n    async getTokenQueryParameter(map) {\n      const idToken = new CognitoIdToken();\n      const accessToken = new CognitoAccessToken();\n      const refreshToken = new CognitoRefreshToken();\n      const state = null;\n      if (map.has(this.getCognitoConstants().IDTOKEN)) {\n        idToken.setJwtToken(map.get(this.getCognitoConstants().IDTOKEN));\n        this.signInUserSession.setIdToken(idToken);\n      } else {\n        this.signInUserSession.setIdToken(idToken);\n      }\n      if (map.has(this.getCognitoConstants().ACCESSTOKEN)) {\n        accessToken.setJwtToken(map.get(this.getCognitoConstants().ACCESSTOKEN));\n        this.signInUserSession.setAccessToken(accessToken);\n      } else {\n        this.signInUserSession.setAccessToken(accessToken);\n      }\n      if (map.has(this.getCognitoConstants().STATE)) {\n        this.signInUserSession.setState(map.get(this.getCognitoConstants().STATE));\n      } else {\n        this.signInUserSession.setState(state);\n      }\n      this.cacheTokensScopes();\n      // this.userhandler.onSuccess(this.signInUserSession); \n      return this.signInUserSession;\n    }\n  \n    /**\n     * Get cached tokens and scopes and return a new session using all the cached data.\n     * @returns {CognitoAuthSession} the auth session\n     */\n    getCachedSession() {\n      if (!this.username) {\n        return new CognitoAuthSession();\n      }\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}.${this.username}`;\n      const idTokenKey = `${keyPrefix}.idToken`;\n      const accessTokenKey = `${keyPrefix}.accessToken`;\n      const refreshTokenKey = `${keyPrefix}.refreshToken`;\n      const scopeKey = `${keyPrefix}.tokenScopesString`;\n  \n      const scopesString = this.storage.getItem(scopeKey);\n      let scopesArray = [];\n      if (scopesString) {\n        scopesArray = scopesString.split(' ');\n      }\n      const tokenScopes = new CognitoTokenScopes(scopesArray);\n      const idToken = new CognitoIdToken(this.storage.getItem(idTokenKey));\n      const accessToken = new CognitoAccessToken(this.storage.getItem(accessTokenKey));\n      const refreshToken = new CognitoRefreshToken(this.storage.getItem(refreshTokenKey));\n  \n      const sessionData = {\n        IdToken: idToken,\n        AccessToken: accessToken,\n        RefreshToken: refreshToken,\n        TokenScopes: tokenScopes,\n      };\n      const cachedSession = new CognitoAuthSession(sessionData);\n      return cachedSession;\n    }\n  \n    /**\n     * This is used to get last signed in user from local storage\n     * @returns {string} the last user name\n     */\n    getLastUser() {\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\n      const lastUserName = this.storage.getItem(lastUserKey);\n      if (lastUserName) {\n        return lastUserName;\n      }\n      return undefined;\n    }\n  \n    /**\n     * This is used to save the session tokens and scopes to local storage\n     * Input parameter is a set of strings.\n     * @returns {void}\n     */\n    cacheTokensScopes() {\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n      const tokenUserName = this.signInUserSession.getAccessToken().getUsername();\n      this.username = tokenUserName;\n      const idTokenKey = `${keyPrefix}.${tokenUserName}.idToken`;\n      const accessTokenKey = `${keyPrefix}.${tokenUserName}.accessToken`;\n      const refreshTokenKey = `${keyPrefix}.${tokenUserName}.refreshToken`;\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\n      const scopeKey = `${keyPrefix}.${tokenUserName}.tokenScopesString`;\n      const scopesArray = this.signInUserSession.getTokenScopes().getScopes();\n      const scopesString = scopesArray.join(' ');\n      this.storage.setItem(idTokenKey, this.signInUserSession.getIdToken().getJwtToken());\n      this.storage.setItem(accessTokenKey, this.signInUserSession.getAccessToken().getJwtToken());\n      this.storage.setItem(refreshTokenKey, this.signInUserSession.getRefreshToken().getToken());\n      this.storage.setItem(lastUserKey, tokenUserName);\n      this.storage.setItem(scopeKey, scopesString);\n    }\n  \n    /**\n     * Compare two sets if they are identical.\n     * @param {set} set1 one set\n     * @param {set} set2 the other set\n     * @returns {boolean} boolean value is true if two sets are identical\n     */\n    compareSets(set1, set2) {\n      if (set1.size !== set2.size) {\n        return false;\n      }\n      for (const item of set1) {\n        if (!set2.has(item)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  \n    /**\n     * @param {string} url the url string\n     * Get the hostname from url.\n     * @returns {string} hostname string\n     */\n    getHostName(url) {\n      const match = url.match(this.getCognitoConstants().HOSTNAMEREGEX);\n      if (match != null && match.length > 2 && typeof match[2] ===\n      this.getCognitoConstants().STRINGTYPE && match[2].length > 0) {\n        return match[2];\n      }\n      return undefined;\n    }\n  \n    /**\n     * Get http query parameters and return them as a map.\n     * @param {string} url the url string\n     * @param {string} splitMark query parameters split mark (prefix)\n     * @returns {map} map\n     */\n    getQueryParameters(url, splitMark) {\n      const str = String(url).split(splitMark);\n      const url2 = str[1];\n      const str1 = String(url2).split(this.getCognitoConstants().AMPERSAND);\n      const num = str1.length;\n      const map = new Map();\n      let i;\n      for (i = 0; i < num; i++) {\n        str1[i] = String(str1[i]).split(this.getCognitoConstants().QUERYPARAMETERREGEX2);\n        map.set(str1[i][0], str1[i][1]);\n      }\n      return map;\n    }\n  \n    /**\n     * helper function to generate a random string\n     * @param {int} length the length of string\n     * @param {string} chars a original string\n     * @returns {string} a random value.\n     */\n    generateRandomString(length, chars) {\n      let result = '';\n      let i = length;\n      for (; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\n      return result;\n    }\n  \n    /**\n     * This is used to clear the session tokens and scopes from local storage\n     * @returns {void}\n     */\n    clearCachedTokensScopes() {\n      const keyPrefix = `CognitoIdentityServiceProvider.${this.getClientId()}`;\n      const idTokenKey = `${keyPrefix}.${this.username}.idToken`;\n      const accessTokenKey = `${keyPrefix}.${this.username}.accessToken`;\n      const refreshTokenKey = `${keyPrefix}.${this.username}.refreshToken`;\n      const lastUserKey = `${keyPrefix}.LastAuthUser`;\n      const scopeKey = `${keyPrefix}.${this.username}.tokenScopesString`;\n  \n      this.storage.removeItem(idTokenKey);\n      this.storage.removeItem(accessTokenKey);\n      this.storage.removeItem(refreshTokenKey);\n      this.storage.removeItem(lastUserKey);\n      this.storage.removeItem(scopeKey);\n    }\n  \n    /**\n     * This is used to build a user session from tokens retrieved in the authentication result\n     * @param {object} refreshToken authResult Successful auth response from server.\n     * @returns {void}\n     */\n    async refreshSession(refreshToken) {\n      // https POST call for refreshing token\n      const url = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_TOKEN);\n      const header = this.getCognitoConstants().HEADER;\n      const body = { grant_type: this.getCognitoConstants().REFRESHTOKEN,\n        client_id: this.getClientId(),\n        redirect_uri: this.RedirectUriSignIn,\n        refresh_token: refreshToken };\n      // const boundOnSuccess = (this.onSuccessRefreshToken).bind(this);\n      // const boundOnFailure = (this.onFailure).bind(this);\n      // this.makePOSTRequest(header, body, url, boundOnSuccess, boundOnFailure);\n      const response =  await  this.makePOSTRequest(header, body, url);\n      const signInUserSession = await this.onSuccessRefreshToken(response);\n      return signInUserSession;\n    }\n  \n    /**\n     * Make the http POST request.\n     * @param {JSON} header header JSON object\n     * @param {JSON} body body JSON object\n     * @param {string} url string\n     * @param {function} onSuccess callback\n     * @param {function} onFailure callback\n     * @returns {void}\n     */\n    makePOSTRequest(header, body, url, onSuccess = null, onFailure = null) {\n      return new Promise( (resolve, reject)=> {\n        \n      // This is a sample server that supports CORS.\n      const xhr = this.createCORSRequest(this.getCognitoConstants().POST, url);\n      let bodyString = '';\n      if (!xhr) {\n        return;\n      }\n      // set header\n      for (let key in header) {\n        xhr.setRequestHeader(key, header[key]);\n      }\n      for (let key in body) {\n        bodyString = bodyString.concat(key, this.getCognitoConstants().EQUALSIGN,\n        body[key], this.getCognitoConstants().AMPERSAND);\n      }\n      bodyString = bodyString.substring(0, bodyString.length - 1);\n      xhr.send(bodyString);\n      xhr.onreadystatechange = function addressState() {\n        if (xhr.readyState === 4) {\n          if (xhr.status === 200) {\n            // onSuccess(xhr.responseText);\n            // return xhr.responseText\n            resolve(xhr.responseText)\n          } else {\n            // onFailure(xhr.responseText);\n            // throw xhr.responseText\n            reject(xhr.responseText)\n          }\n        }\n      };\n    })\n  }\n    \n  \n    /**\n     * Create the XHR object\n     * @param {string} method which method to call\n     * @param {string} url the url string\n     * @returns {object} xhr\n     */\n    createCORSRequest(method, url) {\n      let xhr = new XMLHttpRequest();\n      xhr.open(method, url, true);\n      if (this.getCognitoConstants().WITHCREDENTIALS in xhr) {\n        // XHR for Chrome/Firefox/Opera/Safari.\n        xhr.open(method, url, true);\n      } else if (typeof XDomainRequest !== this.getCognitoConstants().UNDEFINED) {\n        // XDomainRequest for IE.\n        xhr = new XDomainRequest();\n        xhr.open(method, url);\n      } else {\n        // CORS not supported.\n        xhr = null;\n      }\n      return xhr;\n    }\n  \n    /**\n     * The http POST request onFailure callback.\n     * @param {object} err the error object\n     * @returns {function} onFailure\n     */\n    onFailure(err) {\n      this.userhandler.onFailure(err);\n    }\n  \n\n    /**\n     * The http POST request onSuccess callback when refreshing tokens.\n     * @param {JSON} jsonData tokens\n     */\n    async onSuccessRefreshToken(jsonData) {\n      const jsonDataObject = JSON.parse(jsonData);\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ERROR)) {\n        const URL = this.getFQDNSignIn();\n        this.launchUri(URL);\n      } else {\n        if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n        this.getCognitoConstants().IDTOKEN)) {\n          this.signInUserSession.setIdToken(new\n          CognitoIdToken(jsonDataObject.id_token));\n        }\n        if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n        this.getCognitoConstants().ACCESSTOKEN)) {\n          this.signInUserSession.setAccessToken(new\n          CognitoAccessToken(jsonDataObject.access_token));\n        }\n        this.cacheTokensScopes();\n        // this.userhandler.onSuccess(this.signInUserSession);\n        return this.signInUserSession;\n      }\n    }\n  \n    /**\n     * The http POST request onSuccess callback when exchanging code for tokens.\n     * @param {JSON} jsonData tokens\n     */\n    async onSuccessExchangeForToken(jsonData) {\n      const jsonDataObject = JSON.parse(jsonData);\n      const refreshToken = new CognitoRefreshToken();\n      const accessToken = new CognitoAccessToken();\n      const idToken = new CognitoIdToken();\n      const state = null;\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ERROR)) {\n        // return this.userhandler.onFailure(jsonData);\n        throw jsonData;\n      }\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().IDTOKEN)) {\n        this.signInUserSession.setIdToken(\n        new CognitoIdToken(jsonDataObject.id_token));\n      } else {\n        this.signInUserSession.setIdToken(idToken);\n      }\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().ACCESSTOKEN)) {\n        this.signInUserSession.setAccessToken(new\n        CognitoAccessToken(jsonDataObject.access_token));\n      } else {\n        this.signInUserSession.setAccessToken(accessToken);\n      }\n      if (Object.prototype.hasOwnProperty.call(jsonDataObject,\n      this.getCognitoConstants().REFRESHTOKEN)) {\n        this.signInUserSession.setRefreshToken(new\n        CognitoRefreshToken(jsonDataObject.refresh_token));\n      } else {\n        this.signInUserSession.setRefreshToken(refreshToken);\n      }\n      this.cacheTokensScopes();\n      // this.userhandler.onSuccess(this.signInUserSession);\n      return this.signInUserSession\n    }\n  \n    /**\n     * Launch Cognito Auth UI page.\n     * @param {string} URL the url to launch\n     * @returns {void}\n     */\n    launchUri(URL) {\n      window.open(URL, this.getCognitoConstants().SELF);\n    }\n  \n    /**\n     * @returns {string} scopes string\n     */\n    getSpaceSeperatedScopeString() {\n      let tokenScopesString = this.signInUserSession.getTokenScopes().getScopes();\n      tokenScopesString = tokenScopesString.join(this.getCognitoConstants().SPACE);\n      return encodeURIComponent(tokenScopesString);\n    }\n  \n    /**\n     * Create the FQDN(fully qualified domain name) for authorization endpoint.\n     * @returns {string} url\n     */\n    getFQDNSignIn() {\n      if (this.state == null) {\n        this.state = this.generateRandomString(this.getCognitoConstants().STATELENGTH,\n      this.getCognitoConstants().STATEORIGINSTRING);\n      }\n  \n      const identityProviderParam = this.IdentityProvider\n          ? this.getCognitoConstants().AMPERSAND.concat(\n              this.getCognitoConstants().DOMAIN_QUERY_PARAM_IDENTITY_PROVIDER,\n              this.getCognitoConstants().EQUALSIGN, this.IdentityProvider)\n          : '';\n      const tokenScopesString = this.getSpaceSeperatedScopeString();\n  \n      var userContextDataParam = '';\n      var userContextData = this.getUserContextData();\n      if (userContextData) {\n        userContextDataParam = this.getCognitoConstants().AMPERSAND + this.getCognitoConstants().DOMAIN_QUERY_PARAM_USERCONTEXTDATA +\n                               this.getCognitoConstants().EQUALSIGN + this.getUserContextData();\n      }\n  \n      // Build the complete web domain to launch the login screen\n      const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNIN,\n      this.getCognitoConstants().QUESTIONMARK,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_REDIRECT_URI,\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignIn),\n      this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_RESPONSE_TYPE,\n      this.getCognitoConstants().EQUALSIGN,\n      this.responseType, this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().CLIENT_ID,\n      this.getCognitoConstants().EQUALSIGN, this.getClientId(),\n      this.getCognitoConstants().AMPERSAND, this.getCognitoConstants().STATE,\n      this.getCognitoConstants().EQUALSIGN, this.state, this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().SCOPE, this.getCognitoConstants().EQUALSIGN, tokenScopesString, identityProviderParam,\n      userContextDataParam);\n  \n      return uri;\n    }\n  \n    /**\n     * Sign out the user.\n     * @returns {void}\n     */\n    signOut() {\n      const URL = this.getFQDNSignOut();\n      this.signInUserSession = null;\n      this.clearCachedTokensScopes();\n      this.launchUri(URL);\n    }\n  \n    /**\n     * Create the FQDN(fully qualified domain name) for signout endpoint.\n     * @returns {string} url\n     */\n    getFQDNSignOut() {\n      const uri = this.getCognitoConstants().DOMAIN_SCHEME.concat(\n      this.getCognitoConstants().COLONDOUBLESLASH, this.getAppWebDomain(),\n      this.getCognitoConstants().SLASH, this.getCognitoConstants().DOMAIN_PATH_SIGNOUT,\n      this.getCognitoConstants().QUESTIONMARK,\n      this.getCognitoConstants().DOMAIN_QUERY_PARAM_SIGNOUT_URI,\n      this.getCognitoConstants().EQUALSIGN, encodeURIComponent(this.RedirectUriSignOut),\n      this.getCognitoConstants().AMPERSAND,\n      this.getCognitoConstants().CLIENT_ID,\n      this.getCognitoConstants().EQUALSIGN, this.getClientId());\n      return uri;\n    }\n  \n    /**\n     * This method returns the encoded data string used for cognito advanced security feature.\n     * This would be generated only when developer has included the JS used for collecting the\n     * data on their client. Please refer to documentation to know more about using AdvancedSecurity\n     * features\n     **/\n    getUserContextData() {\n      if (typeof AmazonCognitoAdvancedSecurityData === \"undefined\") {\n        return;\n      }\n  \n      var _username = \"\";\n      if (this.username){\n        _username = this.username;\n      }\n  \n      var _userpoolId = \"\";\n      if (this.userpoolId){\n        _userpoolId = this.userpoolId;\n      }\n  \n      if (this.advancedSecurityDataCollectionFlag) {\n        return AmazonCognitoAdvancedSecurityData.getData(_username, _userpoolId, this.clientId);\n      }\n    }\n\n    /**\n     * Helper method to let the user know if he has either a valid cached session \n     * or a valid authenticated session from the app integration callback.\n     * @returns {boolean} userSignedIn \n     */\n    isUserSignedIn() {\n     return (this.signInUserSession != null && this.signInUserSession.isValid()) || \n     (this.getCachedSession() != null && this.getCachedSession().isValid());\n    }\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/CognitoAuth.js","\nimport * as Cookies from 'js-cookie';\n\n/** @class */\nexport default class CookieStorage {\n\n  /**\n   * Constructs a new CookieStorage object\n   * @param {object} data Creation options.\n   * @param {string} data.domain Cookies domain (mandatory).\n   * @param {string} data.path Cookies path (default: '/')\n   * @param {integer} data.expires Cookie expiration (in days, default: 365)\n   * @param {boolean} data.secure Cookie secure flag (default: true)\n   */\n  constructor(data) {\n    this.domain = data.domain;\n    if (data.path) {\n      this.path = data.path;\n    } else {\n      this.path = '/';\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'expires')) {\n      this.expires = data.expires;\n    } else {\n      this.expires = 365;\n    }\n    if (Object.prototype.hasOwnProperty.call(data, 'secure')) {\n      this.secure = data.secure;\n    } else {\n      this.secure = true;\n    }\n  }\n\n  /**\n   * This is used to set a specific item in storage\n   * @param {string} key - the key for the item\n   * @param {object} value - the value\n   * @returns {string} value that was set\n   */\n  setItem(key, value) {\n    Cookies.set(key, value, {\n      path: this.path,\n      expires: this.expires,\n      domain: this.domain,\n      secure: this.secure,\n    }\n    );\n    return Cookies.get(key);\n  }\n\n  /**\n   * This is used to get a specific key from storage\n   * @param {string} key - the key for the item\n   * This is used to clear the storage\n   * @returns {string} the data item\n   */\n  getItem(key) {\n    return Cookies.get(key);\n  }\n\n  /**\n   * This is used to remove an item from storage\n   * @param {string} key - the key being set\n   * @returns {string} value - value that was deleted\n   */\n  removeItem(key) {\n    return Cookies.remove(key, {\n      path: this.path,\n      domain: this.domain,\n      secure: this.secure,\n    }\n    );\n  }\n\n  /**\n   * This is used to clear the storage\n   * @returns {string} nothing\n   */\n  clear() {\n    const cookies = Cookies.get();\n    let index;\n    for (index = 0; index < cookies.length; ++index) {\n      Cookies.remove(cookies[index]);\n    }\n    return {};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/CookieStorage.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\nconst monthNames =\n  ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst weekNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n/** @class */\nexport default class DateHelper {\n  /**\n   * @returns {string} The current time in \"ddd MMM D HH:mm:ss UTC YYYY\" format.\n   */\n  getNowString() {\n    const now = new Date();\n\n    const weekDay = weekNames[now.getUTCDay()];\n    const month = monthNames[now.getUTCMonth()];\n    const day = now.getUTCDate();\n\n    let hours = now.getUTCHours();\n    if (hours < 10) {\n      hours = `0${hours}`;\n    }\n\n    let minutes = now.getUTCMinutes();\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    let seconds = now.getUTCSeconds();\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    const year = now.getUTCFullYear();\n\n    // ddd MMM D HH:mm:ss UTC YYYY\n    const dateNow = `${weekDay} ${month} ${day} ${hours}:${minutes}:${seconds} UTC ${year}`;\n\n    return dateNow;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DateHelper.js","/*!\n * Amazon Cognito Auth SDK for JavaScript\n * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n\n * Licensed under the Apache License, Version 2.0 (the \"License\").\n * You may not use this file except in compliance with the License.\n * A copy of the License is located at\n *\n *         http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file.\n * This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES\n * OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions\n * and limitations under the License.\n */\n\nexport { default as CognitoAccessToken } from './CognitoAccessToken';\nexport { default as CognitoIdToken } from './CognitoIdToken';\nexport { default as CognitoRefreshToken } from './CognitoRefreshToken';\nexport { default as CognitoTokenScopes } from './CognitoTokenScopes';\nexport { default as CognitoAuth } from './CognitoAuth';\nexport { default as CognitoAuthSession } from './CognitoAuthSession';\nexport { default as DateHelper } from './DateHelper';\nexport { default as StorageHelper } from './StorageHelper';\nexport { default as CookieStorage } from './CookieStorage';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*!\n * JavaScript Cookie v2.2.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/js-cookie/src/js.cookie.js\n// module id = 11\n// module chunks = 0"],"sourceRoot":""}